Terminals unused in grammar

   UNTIL
   WHITESPACE
   PRE_DEC
   PRE_INC
   SUF_DEC
   SUF_INC
   PRECEED_FUNC


Rules useless in parser due to conflicts

   40 if_block: IF '(' expression ')' stmt ELSE stmt


Grammar

    0 $accept: start $end

    1 start: start line_stmt
    2      | line_stmt

    3 line_stmt: function
    4          | declaration

    5 function: data_type IDENTIFIER '(' argument_list ')' scope_stmt
    6         | data_type IDENTIFIER '(' argument_list ')' ';'

    7 argument_list: arguments
    8              | /* empty */

    9 arguments: arguments ',' argument
   10          | argument

   11 argument: data_type identifier

   12 scope_stmt: '{' stmts '}'

   13 stmts: stmts stmt
   14      | /* empty */

   15 stmt: scope_stmt
   16     | atomic_stmt

   17 atomic_stmt: if_block
   18            | while_block
   19            | for_block
   20            | switch_block
   21            | case_block
   22            | declaration
   23            | print
   24            | scan
   25            | function_invoke ';'
   26            | RETURN ';'
   27            | CONTINUE ';'
   28            | BREAK ';'
   29            | RETURN sub_expression ';'

   30 declaration: data_type declaration_list ';'
   31            | CONST data_type declaration_list ';'
   32            | declaration_list ';'
   33            | unary_expression ';'

   34 declaration_list: declaration_list ',' sub_declaration
   35                 | sub_declaration

   36 sub_declaration: assign_expression
   37                | identifier
   38                | array_indexing

   39 if_block: IF '(' expression ')' stmt
   40         | IF '(' expression ')' stmt ELSE stmt

   41 for_block: FOR '(' expression_statement expression_statement ')' stmt
   42          | FOR '(' expression_statement expression_statement expression_statement ')' stmt

   43 while_block: WHILE '(' expression ')' stmt

   44 switch_block: SWITCH '(' expression ')' stmt

   45 case_block: CASE expression ':' stmt
   46           | DEFAULT ':' stmt

   47 expression_statement: expression ';'
   48                     | ';'

   49 expression: expression ',' sub_expression
   50           | sub_expression

   51 sub_expression: sub_expression '>' sub_expression
   52               | sub_expression '<' sub_expression
   53               | sub_expression EQ sub_expression
   54               | sub_expression NE sub_expression
   55               | sub_expression LE sub_expression
   56               | sub_expression GE sub_expression
   57               | sub_expression SHR sub_expression
   58               | sub_expression SHL sub_expression
   59               | sub_expression '^' sub_expression
   60               | sub_expression '|' sub_expression
   61               | sub_expression '&' sub_expression
   62               | sub_expression LOGIC_AND sub_expression
   63               | sub_expression LOGIC_OR sub_expression
   64               | '!' sub_expression
   65               | arithmetic_expression
   66               | assign_expression
   67               | unary_expression

   68 assign_expression: lhs assign_operation arithmetic_expression
   69                  | lhs assign_operation array_indexing
   70                  | lhs assign_operation function_invoke
   71                  | lhs assign_operation unary_expression

   72 function_invoke: identifier '(' parameter_list ')'
   73                | identifier '(' ')'

   74 parameter_list: parameter_list ',' parameter
   75               | parameter

   76 parameter: sub_expression
   77          | STRING

   78 arithmetic_expression: arithmetic_expression '+' arithmetic_expression
   79                      | arithmetic_expression '-' arithmetic_expression
   80                      | arithmetic_expression '*' arithmetic_expression
   81                      | arithmetic_expression '/' arithmetic_expression
   82                      | arithmetic_expression '%' arithmetic_expression
   83                      | '(' arithmetic_expression ')'
   84                      | '-' arithmetic_expression
   85                      | identifier
   86                      | primitive_constants

   87 unary_expression: IDENTIFIER INC
   88                 | IDENTIFIER DEC
   89                 | INC IDENTIFIER
   90                 | DEC IDENTIFIER

   91 identifier: IDENTIFIER

   92 data_type: INT_TYPE
   93          | DOUBLE_TYPE
   94          | BOOL_TYPE
   95          | CHAR_TYPE
   96          | VOID

   97 primitive_constants: INTEGER
   98                    | CHAR
   99                    | DOUBLE
  100                    | BOOL

  101 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' ';'

  102 print: PRINT '(' STRING ')' ';'
  103      | PRINT '(' STRING ',' IDENTIFIER ')' ';'

  104 lhs: identifier
  105    | array_indexing

  106 array_indexing: identifier '[' array_index ']'
  107               | identifier '[' array_index ']' '[' array_index ']'

  108 array_index: primitive_constants
  109            | identifier

  110 assign_operation: '='
  111                 | ADD_EQ
  112                 | SUB_EQ
  113                 | MULT_EQ
  114                 | DIV_EQ


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 82
'&' (38) 61 101
'(' (40) 5 6 39 40 41 42 43 44 72 73 83 101 102 103
')' (41) 5 6 39 40 41 42 43 44 72 73 83 101 102 103
'*' (42) 80
'+' (43) 78
',' (44) 9 34 49 74 101 103
'-' (45) 79 84
'/' (47) 81
':' (58) 45 46
';' (59) 6 25 26 27 28 29 30 31 32 33 47 48 101 102 103
'<' (60) 52
'=' (61) 110
'>' (62) 51
'[' (91) 106 107
']' (93) 106 107
'^' (94) 59
'{' (123) 12
'|' (124) 60
'}' (125) 12
error (256)
INT_TYPE (258) 92
DOUBLE_TYPE (259) 93
CHAR_TYPE (260) 95
BOOL_TYPE (261) 94
VOID (262) 96
CONST (263) 31
IF (264) 39 40
ELSE (265) 40
SWITCH (266) 44
CASE (267) 45
DEFAULT (268) 46
FOR (269) 41 42
UNTIL (270)
WHILE (271) 43
BREAK (272) 28
CONTINUE (273) 27
RETURN (274) 26 29
PRINT (275) 102 103
SCAN (276) 101
STRING (277) 77 101 102 103
WHITESPACE (278)
INC (279) 87 89
DEC (280) 88 90
ADD_EQ (281) 111
SUB_EQ (282) 112
MULT_EQ (283) 113
DIV_EQ (284) 114
SHL (285) 58
SHR (286) 57
LOGIC_AND (287) 62
LOGIC_OR (288) 63
EQ (289) 53
NE (290) 54
GE (291) 56
LE (292) 55
INTEGER (293) 97
DOUBLE (294) 99
CHAR (295) 98
BOOL (296) 100
IDENTIFIER (297) 5 6 87 88 89 90 91 101 103
PRE_DEC (298)
PRE_INC (299)
SUF_DEC (300)
SUF_INC (301)
UMINUS (302)
PRECEED_ELSE (303)
PRECEED_FUNC (304)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
start (72)
    on left: 1 2, on right: 0 1
line_stmt (73)
    on left: 3 4, on right: 1 2
function (74)
    on left: 5 6, on right: 3
argument_list (75)
    on left: 7 8, on right: 5 6
arguments (76)
    on left: 9 10, on right: 7 9
argument (77)
    on left: 11, on right: 9 10
scope_stmt (78)
    on left: 12, on right: 5 15
stmts (79)
    on left: 13 14, on right: 12 13
stmt (80)
    on left: 15 16, on right: 13 39 40 41 42 43 44 45 46
atomic_stmt (81)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 16
declaration (82)
    on left: 30 31 32 33, on right: 4 22
declaration_list (83)
    on left: 34 35, on right: 30 31 32 34
sub_declaration (84)
    on left: 36 37 38, on right: 34 35
if_block (85)
    on left: 39 40, on right: 17
for_block (86)
    on left: 41 42, on right: 19
while_block (87)
    on left: 43, on right: 18
switch_block (88)
    on left: 44, on right: 20
case_block (89)
    on left: 45 46, on right: 21
expression_statement (90)
    on left: 47 48, on right: 41 42
expression (91)
    on left: 49 50, on right: 39 40 43 44 45 47 49
sub_expression (92)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67, on right:
    29 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 76
assign_expression (93)
    on left: 68 69 70 71, on right: 36 66
function_invoke (94)
    on left: 72 73, on right: 25 70
parameter_list (95)
    on left: 74 75, on right: 72 74
parameter (96)
    on left: 76 77, on right: 74 75
arithmetic_expression (97)
    on left: 78 79 80 81 82 83 84 85 86, on right: 65 68 78 79 80 81
    82 83 84
unary_expression (98)
    on left: 87 88 89 90, on right: 33 67 71
identifier (99)
    on left: 91, on right: 11 37 72 73 85 104 106 107 109
data_type (100)
    on left: 92 93 94 95 96, on right: 5 6 11 30 31
primitive_constants (101)
    on left: 97 98 99 100, on right: 86 108
scan (102)
    on left: 101, on right: 24
print (103)
    on left: 102 103, on right: 23
lhs (104)
    on left: 104 105, on right: 68 69 70 71
array_indexing (105)
    on left: 106 107, on right: 38 69 105
array_index (106)
    on left: 108 109, on right: 106 107
assign_operation (107)
    on left: 110 111 112 113 114, on right: 68 69 70 71


state 0

    0 $accept: . start $end

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9

    start              go to state 10
    line_stmt          go to state 11
    function           go to state 12
    declaration        go to state 13
    declaration_list   go to state 14
    sub_declaration    go to state 15
    assign_expression  go to state 16
    unary_expression   go to state 17
    identifier         go to state 18
    data_type          go to state 19
    lhs                go to state 20
    array_indexing     go to state 21


state 1

   92 data_type: INT_TYPE .

    $default  reduce using rule 92 (data_type)


state 2

   93 data_type: DOUBLE_TYPE .

    $default  reduce using rule 93 (data_type)


state 3

   95 data_type: CHAR_TYPE .

    $default  reduce using rule 95 (data_type)


state 4

   94 data_type: BOOL_TYPE .

    $default  reduce using rule 94 (data_type)


state 5

   96 data_type: VOID .

    $default  reduce using rule 96 (data_type)


state 6

   31 declaration: CONST . data_type declaration_list ';'

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    data_type  go to state 22


state 7

   89 unary_expression: INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


state 8

   90 unary_expression: DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


state 9

   87 unary_expression: IDENTIFIER . INC
   88                 | IDENTIFIER . DEC
   91 identifier: IDENTIFIER .

    INC  shift, and go to state 25
    DEC  shift, and go to state 26

    $default  reduce using rule 91 (identifier)


state 10

    0 $accept: start . $end
    1 start: start . line_stmt

    $end         shift, and go to state 27
    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9

    line_stmt          go to state 28
    function           go to state 12
    declaration        go to state 13
    declaration_list   go to state 14
    sub_declaration    go to state 15
    assign_expression  go to state 16
    unary_expression   go to state 17
    identifier         go to state 18
    data_type          go to state 19
    lhs                go to state 20
    array_indexing     go to state 21


state 11

    2 start: line_stmt .

    $default  reduce using rule 2 (start)


state 12

    3 line_stmt: function .

    $default  reduce using rule 3 (line_stmt)


state 13

    4 line_stmt: declaration .

    $default  reduce using rule 4 (line_stmt)


state 14

   32 declaration: declaration_list . ';'
   34 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 29
    ';'  shift, and go to state 30


state 15

   35 declaration_list: sub_declaration .

    $default  reduce using rule 35 (declaration_list)


state 16

   36 sub_declaration: assign_expression .

    $default  reduce using rule 36 (sub_declaration)


state 17

   33 declaration: unary_expression . ';'

    ';'  shift, and go to state 31


state 18

   37 sub_declaration: identifier .
  104 lhs: identifier .
  106 array_indexing: identifier . '[' array_index ']'
  107               | identifier . '[' array_index ']' '[' array_index ']'

    '['  shift, and go to state 32

    ','       reduce using rule 37 (sub_declaration)
    ';'       reduce using rule 37 (sub_declaration)
    $default  reduce using rule 104 (lhs)


state 19

    5 function: data_type . IDENTIFIER '(' argument_list ')' scope_stmt
    6         | data_type . IDENTIFIER '(' argument_list ')' ';'
   30 declaration: data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 33

    declaration_list   go to state 34
    sub_declaration    go to state 15
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 20

   68 assign_expression: lhs . assign_operation arithmetic_expression
   69                  | lhs . assign_operation array_indexing
   70                  | lhs . assign_operation function_invoke
   71                  | lhs . assign_operation unary_expression

    ADD_EQ   shift, and go to state 35
    SUB_EQ   shift, and go to state 36
    MULT_EQ  shift, and go to state 37
    DIV_EQ   shift, and go to state 38
    '='      shift, and go to state 39

    assign_operation  go to state 40


state 21

   38 sub_declaration: array_indexing .
  105 lhs: array_indexing .

    ','       reduce using rule 38 (sub_declaration)
    ';'       reduce using rule 38 (sub_declaration)
    $default  reduce using rule 105 (lhs)


state 22

   31 declaration: CONST data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 41

    declaration_list   go to state 42
    sub_declaration    go to state 15
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 23

   89 unary_expression: INC IDENTIFIER .

    $default  reduce using rule 89 (unary_expression)


state 24

   90 unary_expression: DEC IDENTIFIER .

    $default  reduce using rule 90 (unary_expression)


state 25

   87 unary_expression: IDENTIFIER INC .

    $default  reduce using rule 87 (unary_expression)


state 26

   88 unary_expression: IDENTIFIER DEC .

    $default  reduce using rule 88 (unary_expression)


state 27

    0 $accept: start $end .

    $default  accept


state 28

    1 start: start line_stmt .

    $default  reduce using rule 1 (start)


state 29

   34 declaration_list: declaration_list ',' . sub_declaration

    IDENTIFIER  shift, and go to state 41

    sub_declaration    go to state 43
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 30

   32 declaration: declaration_list ';' .

    $default  reduce using rule 32 (declaration)


state 31

   33 declaration: unary_expression ';' .

    $default  reduce using rule 33 (declaration)


state 32

  106 array_indexing: identifier '[' . array_index ']'
  107               | identifier '[' . array_index ']' '[' array_index ']'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41

    identifier           go to state 48
    primitive_constants  go to state 49
    array_index          go to state 50


state 33

    5 function: data_type IDENTIFIER . '(' argument_list ')' scope_stmt
    6         | data_type IDENTIFIER . '(' argument_list ')' ';'
   91 identifier: IDENTIFIER .

    '('  shift, and go to state 51

    $default  reduce using rule 91 (identifier)


state 34

   30 declaration: data_type declaration_list . ';'
   34 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 29
    ';'  shift, and go to state 52


state 35

  111 assign_operation: ADD_EQ .

    $default  reduce using rule 111 (assign_operation)


state 36

  112 assign_operation: SUB_EQ .

    $default  reduce using rule 112 (assign_operation)


state 37

  113 assign_operation: MULT_EQ .

    $default  reduce using rule 113 (assign_operation)


state 38

  114 assign_operation: DIV_EQ .

    $default  reduce using rule 114 (assign_operation)


state 39

  110 assign_operation: '=' .

    $default  reduce using rule 110 (assign_operation)


state 40

   68 assign_expression: lhs assign_operation . arithmetic_expression
   69                  | lhs assign_operation . array_indexing
   70                  | lhs assign_operation . function_invoke
   71                  | lhs assign_operation . unary_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    function_invoke        go to state 55
    arithmetic_expression  go to state 56
    unary_expression       go to state 57
    identifier             go to state 58
    primitive_constants    go to state 59
    array_indexing         go to state 60


state 41

   91 identifier: IDENTIFIER .

    $default  reduce using rule 91 (identifier)


state 42

   31 declaration: CONST data_type declaration_list . ';'
   34 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 29
    ';'  shift, and go to state 61


state 43

   34 declaration_list: declaration_list ',' sub_declaration .

    $default  reduce using rule 34 (declaration_list)


state 44

   97 primitive_constants: INTEGER .

    $default  reduce using rule 97 (primitive_constants)


state 45

   99 primitive_constants: DOUBLE .

    $default  reduce using rule 99 (primitive_constants)


state 46

   98 primitive_constants: CHAR .

    $default  reduce using rule 98 (primitive_constants)


state 47

  100 primitive_constants: BOOL .

    $default  reduce using rule 100 (primitive_constants)


state 48

  109 array_index: identifier .

    $default  reduce using rule 109 (array_index)


state 49

  108 array_index: primitive_constants .

    $default  reduce using rule 108 (array_index)


state 50

  106 array_indexing: identifier '[' array_index . ']'
  107               | identifier '[' array_index . ']' '[' array_index ']'

    ']'  shift, and go to state 62


state 51

    5 function: data_type IDENTIFIER '(' . argument_list ')' scope_stmt
    6         | data_type IDENTIFIER '(' . argument_list ')' ';'

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    $default  reduce using rule 8 (argument_list)

    argument_list  go to state 63
    arguments      go to state 64
    argument       go to state 65
    data_type      go to state 66


state 52

   30 declaration: data_type declaration_list ';' .

    $default  reduce using rule 30 (declaration)


state 53

   84 arithmetic_expression: '-' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 67
    identifier             go to state 68
    primitive_constants    go to state 59


state 54

   83 arithmetic_expression: '(' . arithmetic_expression ')'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 69
    identifier             go to state 68
    primitive_constants    go to state 59


state 55

   70 assign_expression: lhs assign_operation function_invoke .

    $default  reduce using rule 70 (assign_expression)


state 56

   68 assign_expression: lhs assign_operation arithmetic_expression .
   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 68 (assign_expression)


state 57

   71 assign_expression: lhs assign_operation unary_expression .

    $default  reduce using rule 71 (assign_expression)


state 58

   72 function_invoke: identifier . '(' parameter_list ')'
   73                | identifier . '(' ')'
   85 arithmetic_expression: identifier .
  106 array_indexing: identifier . '[' array_index ']'
  107               | identifier . '[' array_index ']' '[' array_index ']'

    '('  shift, and go to state 75
    '['  shift, and go to state 32

    $default  reduce using rule 85 (arithmetic_expression)


state 59

   86 arithmetic_expression: primitive_constants .

    $default  reduce using rule 86 (arithmetic_expression)


state 60

   69 assign_expression: lhs assign_operation array_indexing .

    $default  reduce using rule 69 (assign_expression)


state 61

   31 declaration: CONST data_type declaration_list ';' .

    $default  reduce using rule 31 (declaration)


state 62

  106 array_indexing: identifier '[' array_index ']' .
  107               | identifier '[' array_index ']' . '[' array_index ']'

    '['  shift, and go to state 76

    $default  reduce using rule 106 (array_indexing)


state 63

    5 function: data_type IDENTIFIER '(' argument_list . ')' scope_stmt
    6         | data_type IDENTIFIER '(' argument_list . ')' ';'

    ')'  shift, and go to state 77


state 64

    7 argument_list: arguments .
    9 arguments: arguments . ',' argument

    ','  shift, and go to state 78

    $default  reduce using rule 7 (argument_list)


state 65

   10 arguments: argument .

    $default  reduce using rule 10 (arguments)


state 66

   11 argument: data_type . identifier

    IDENTIFIER  shift, and go to state 41

    identifier  go to state 79


state 67

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression
   84                      | '-' arithmetic_expression .

    $default  reduce using rule 84 (arithmetic_expression)


state 68

   85 arithmetic_expression: identifier .

    $default  reduce using rule 85 (arithmetic_expression)


state 69

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression
   83                      | '(' arithmetic_expression . ')'

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74
    ')'  shift, and go to state 80


state 70

   79 arithmetic_expression: arithmetic_expression '-' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 81
    identifier             go to state 68
    primitive_constants    go to state 59


state 71

   78 arithmetic_expression: arithmetic_expression '+' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 82
    identifier             go to state 68
    primitive_constants    go to state 59


state 72

   80 arithmetic_expression: arithmetic_expression '*' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 83
    identifier             go to state 68
    primitive_constants    go to state 59


state 73

   81 arithmetic_expression: arithmetic_expression '/' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 84
    identifier             go to state 68
    primitive_constants    go to state 59


state 74

   82 arithmetic_expression: arithmetic_expression '%' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 85
    identifier             go to state 68
    primitive_constants    go to state 59


state 75

   72 function_invoke: identifier '(' . parameter_list ')'
   73                | identifier '(' . ')'

    STRING      shift, and go to state 86
    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ')'         shift, and go to state 88

    sub_expression         go to state 89
    assign_expression      go to state 90
    parameter_list         go to state 91
    parameter              go to state 92
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 76

  107 array_indexing: identifier '[' array_index ']' '[' . array_index ']'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41

    identifier           go to state 48
    primitive_constants  go to state 49
    array_index          go to state 97


state 77

    5 function: data_type IDENTIFIER '(' argument_list ')' . scope_stmt
    6         | data_type IDENTIFIER '(' argument_list ')' . ';'

    ';'  shift, and go to state 98
    '{'  shift, and go to state 99

    scope_stmt  go to state 100


state 78

    9 arguments: arguments ',' . argument

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    argument   go to state 101
    data_type  go to state 66


state 79

   11 argument: data_type identifier .

    $default  reduce using rule 11 (argument)


state 80

   83 arithmetic_expression: '(' arithmetic_expression ')' .

    $default  reduce using rule 83 (arithmetic_expression)


state 81

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   79                      | arithmetic_expression '-' arithmetic_expression .
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 79 (arithmetic_expression)


state 82

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   78                      | arithmetic_expression '+' arithmetic_expression .
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 78 (arithmetic_expression)


state 83

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   80                      | arithmetic_expression '*' arithmetic_expression .
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression

    $default  reduce using rule 80 (arithmetic_expression)


state 84

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   81                      | arithmetic_expression '/' arithmetic_expression .
   82                      | arithmetic_expression . '%' arithmetic_expression

    $default  reduce using rule 81 (arithmetic_expression)


state 85

   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression
   82                      | arithmetic_expression '%' arithmetic_expression .

    $default  reduce using rule 82 (arithmetic_expression)


state 86

   77 parameter: STRING .

    $default  reduce using rule 77 (parameter)


state 87

   64 sub_expression: '!' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 102
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 88

   73 function_invoke: identifier '(' ')' .

    $default  reduce using rule 73 (function_invoke)


state 89

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression
   76 parameter: sub_expression .

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 76 (parameter)


state 90

   66 sub_expression: assign_expression .

    $default  reduce using rule 66 (sub_expression)


state 91

   72 function_invoke: identifier '(' parameter_list . ')'
   74 parameter_list: parameter_list . ',' parameter

    ','  shift, and go to state 116
    ')'  shift, and go to state 117


state 92

   75 parameter_list: parameter .

    $default  reduce using rule 75 (parameter_list)


state 93

   65 sub_expression: arithmetic_expression .
   78 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   79                      | arithmetic_expression . '-' arithmetic_expression
   80                      | arithmetic_expression . '*' arithmetic_expression
   81                      | arithmetic_expression . '/' arithmetic_expression
   82                      | arithmetic_expression . '%' arithmetic_expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 65 (sub_expression)


state 94

   67 sub_expression: unary_expression .

    $default  reduce using rule 67 (sub_expression)


state 95

   85 arithmetic_expression: identifier .
  104 lhs: identifier .
  106 array_indexing: identifier . '[' array_index ']'
  107               | identifier . '[' array_index ']' '[' array_index ']'

    '['  shift, and go to state 32

    ADD_EQ    reduce using rule 104 (lhs)
    SUB_EQ    reduce using rule 104 (lhs)
    MULT_EQ   reduce using rule 104 (lhs)
    DIV_EQ    reduce using rule 104 (lhs)
    '='       reduce using rule 104 (lhs)
    $default  reduce using rule 85 (arithmetic_expression)


state 96

  105 lhs: array_indexing .

    $default  reduce using rule 105 (lhs)


state 97

  107 array_indexing: identifier '[' array_index ']' '[' array_index . ']'

    ']'  shift, and go to state 118


state 98

    6 function: data_type IDENTIFIER '(' argument_list ')' ';' .

    $default  reduce using rule 6 (function)


state 99

   12 scope_stmt: '{' . stmts '}'

    $default  reduce using rule 14 (stmts)

    stmts  go to state 119


state 100

    5 function: data_type IDENTIFIER '(' argument_list ')' scope_stmt .

    $default  reduce using rule 5 (function)


state 101

    9 arguments: arguments ',' argument .

    $default  reduce using rule 9 (arguments)


state 102

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression
   64               | '!' sub_expression .

    $default  reduce using rule 64 (sub_expression)


state 103

   58 sub_expression: sub_expression SHL . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 120
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 104

   57 sub_expression: sub_expression SHR . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 121
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 105

   62 sub_expression: sub_expression LOGIC_AND . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 122
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 106

   63 sub_expression: sub_expression LOGIC_OR . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 123
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 107

   53 sub_expression: sub_expression EQ . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 124
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 108

   54 sub_expression: sub_expression NE . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 125
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 109

   56 sub_expression: sub_expression GE . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 126
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 110

   55 sub_expression: sub_expression LE . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 127
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 111

   60 sub_expression: sub_expression '|' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 128
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 112

   59 sub_expression: sub_expression '^' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 129
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 113

   61 sub_expression: sub_expression '&' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 130
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 114

   52 sub_expression: sub_expression '<' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 131
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 115

   51 sub_expression: sub_expression '>' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 132
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 116

   74 parameter_list: parameter_list ',' . parameter

    STRING      shift, and go to state 86
    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 89
    assign_expression      go to state 90
    parameter              go to state 133
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 117

   72 function_invoke: identifier '(' parameter_list ')' .

    $default  reduce using rule 72 (function_invoke)


state 118

  107 array_indexing: identifier '[' array_index ']' '[' array_index ']' .

    $default  reduce using rule 107 (array_indexing)


state 119

   12 scope_stmt: '{' stmts . '}'
   13 stmts: stmts . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99
    '}'          shift, and go to state 145

    scope_stmt         go to state 146
    stmt               go to state 147
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 120

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   58               | sub_expression SHL sub_expression .
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 58 (sub_expression)


state 121

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   57               | sub_expression SHR sub_expression .
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 57 (sub_expression)


state 122

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   62               | sub_expression LOGIC_AND sub_expression .
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '|'  shift, and go to state 111
    '^'  shift, and go to state 112
    '&'  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 62 (sub_expression)


state 123

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression
   63               | sub_expression LOGIC_OR sub_expression .

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 63 (sub_expression)


state 124

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   53               | sub_expression EQ sub_expression .
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 53 (sub_expression)


state 125

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   54               | sub_expression NE sub_expression .
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 54 (sub_expression)


state 126

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   56               | sub_expression GE sub_expression .
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 56 (sub_expression)


state 127

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   55               | sub_expression LE sub_expression .
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 55 (sub_expression)


state 128

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   60               | sub_expression '|' sub_expression .
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '^'  shift, and go to state 112
    '&'  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 60 (sub_expression)


state 129

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   59               | sub_expression '^' sub_expression .
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '&'  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 59 (sub_expression)


state 130

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   61               | sub_expression '&' sub_expression .
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 61 (sub_expression)


state 131

   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   52               | sub_expression '<' sub_expression .
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 52 (sub_expression)


state 132

   51 sub_expression: sub_expression . '>' sub_expression
   51               | sub_expression '>' sub_expression .
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 51 (sub_expression)


state 133

   74 parameter_list: parameter_list ',' parameter .

    $default  reduce using rule 74 (parameter_list)


state 134

   39 if_block: IF . '(' expression ')' stmt
   40         | IF . '(' expression ')' stmt ELSE stmt

    '('  shift, and go to state 160


state 135

   44 switch_block: SWITCH . '(' expression ')' stmt

    '('  shift, and go to state 161


state 136

   45 case_block: CASE . expression ':' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 162
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 137

   46 case_block: DEFAULT . ':' stmt

    ':'  shift, and go to state 164


state 138

   41 for_block: FOR . '(' expression_statement expression_statement ')' stmt
   42          | FOR . '(' expression_statement expression_statement expression_statement ')' stmt

    '('  shift, and go to state 165


state 139

   43 while_block: WHILE . '(' expression ')' stmt

    '('  shift, and go to state 166


state 140

   28 atomic_stmt: BREAK . ';'

    ';'  shift, and go to state 167


state 141

   27 atomic_stmt: CONTINUE . ';'

    ';'  shift, and go to state 168


state 142

   26 atomic_stmt: RETURN . ';'
   29            | RETURN . sub_expression ';'

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ';'         shift, and go to state 169

    sub_expression         go to state 170
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 143

  102 print: PRINT . '(' STRING ')' ';'
  103      | PRINT . '(' STRING ',' IDENTIFIER ')' ';'

    '('  shift, and go to state 171


state 144

  101 scan: SCAN . '(' STRING ',' '&' IDENTIFIER ')' ';'

    '('  shift, and go to state 172


state 145

   12 scope_stmt: '{' stmts '}' .

    $default  reduce using rule 12 (scope_stmt)


state 146

   15 stmt: scope_stmt .

    $default  reduce using rule 15 (stmt)


state 147

   13 stmts: stmts stmt .

    $default  reduce using rule 13 (stmts)


state 148

   16 stmt: atomic_stmt .

    $default  reduce using rule 16 (stmt)


state 149

   22 atomic_stmt: declaration .

    $default  reduce using rule 22 (atomic_stmt)


state 150

   17 atomic_stmt: if_block .

    $default  reduce using rule 17 (atomic_stmt)


state 151

   19 atomic_stmt: for_block .

    $default  reduce using rule 19 (atomic_stmt)


state 152

   18 atomic_stmt: while_block .

    $default  reduce using rule 18 (atomic_stmt)


state 153

   20 atomic_stmt: switch_block .

    $default  reduce using rule 20 (atomic_stmt)


state 154

   21 atomic_stmt: case_block .

    $default  reduce using rule 21 (atomic_stmt)


state 155

   25 atomic_stmt: function_invoke . ';'

    ';'  shift, and go to state 173


state 156

   37 sub_declaration: identifier .
   72 function_invoke: identifier . '(' parameter_list ')'
   73                | identifier . '(' ')'
  104 lhs: identifier .
  106 array_indexing: identifier . '[' array_index ']'
  107               | identifier . '[' array_index ']' '[' array_index ']'

    '('  shift, and go to state 75
    '['  shift, and go to state 32

    ','       reduce using rule 37 (sub_declaration)
    ';'       reduce using rule 37 (sub_declaration)
    $default  reduce using rule 104 (lhs)


state 157

   30 declaration: data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 41

    declaration_list   go to state 34
    sub_declaration    go to state 15
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 158

   24 atomic_stmt: scan .

    $default  reduce using rule 24 (atomic_stmt)


state 159

   23 atomic_stmt: print .

    $default  reduce using rule 23 (atomic_stmt)


state 160

   39 if_block: IF '(' . expression ')' stmt
   40         | IF '(' . expression ')' stmt ELSE stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 174
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 161

   44 switch_block: SWITCH '(' . expression ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 175
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 162

   45 case_block: CASE expression . ':' stmt
   49 expression: expression . ',' sub_expression

    ','  shift, and go to state 176
    ':'  shift, and go to state 177


state 163

   50 expression: sub_expression .
   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 50 (expression)


state 164

   46 case_block: DEFAULT ':' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 178
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 165

   41 for_block: FOR '(' . expression_statement expression_statement ')' stmt
   42          | FOR '(' . expression_statement expression_statement expression_statement ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ';'         shift, and go to state 179

    expression_statement   go to state 180
    expression             go to state 181
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 166

   43 while_block: WHILE '(' . expression ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 182
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 167

   28 atomic_stmt: BREAK ';' .

    $default  reduce using rule 28 (atomic_stmt)


state 168

   27 atomic_stmt: CONTINUE ';' .

    $default  reduce using rule 27 (atomic_stmt)


state 169

   26 atomic_stmt: RETURN ';' .

    $default  reduce using rule 26 (atomic_stmt)


state 170

   29 atomic_stmt: RETURN sub_expression . ';'
   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115
    ';'        shift, and go to state 183


state 171

  102 print: PRINT '(' . STRING ')' ';'
  103      | PRINT '(' . STRING ',' IDENTIFIER ')' ';'

    STRING  shift, and go to state 184


state 172

  101 scan: SCAN '(' . STRING ',' '&' IDENTIFIER ')' ';'

    STRING  shift, and go to state 185


state 173

   25 atomic_stmt: function_invoke ';' .

    $default  reduce using rule 25 (atomic_stmt)


state 174

   39 if_block: IF '(' expression . ')' stmt
   40         | IF '(' expression . ')' stmt ELSE stmt
   49 expression: expression . ',' sub_expression

    ','  shift, and go to state 176
    ')'  shift, and go to state 186


state 175

   44 switch_block: SWITCH '(' expression . ')' stmt
   49 expression: expression . ',' sub_expression

    ','  shift, and go to state 176
    ')'  shift, and go to state 187


state 176

   49 expression: expression ',' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 188
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 177

   45 case_block: CASE expression ':' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 189
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 178

   46 case_block: DEFAULT ':' stmt .

    $default  reduce using rule 46 (case_block)


state 179

   48 expression_statement: ';' .

    $default  reduce using rule 48 (expression_statement)


state 180

   41 for_block: FOR '(' expression_statement . expression_statement ')' stmt
   42          | FOR '(' expression_statement . expression_statement expression_statement ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ';'         shift, and go to state 179

    expression_statement   go to state 190
    expression             go to state 181
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 181

   47 expression_statement: expression . ';'
   49 expression: expression . ',' sub_expression

    ','  shift, and go to state 176
    ';'  shift, and go to state 191


state 182

   43 while_block: WHILE '(' expression . ')' stmt
   49 expression: expression . ',' sub_expression

    ','  shift, and go to state 176
    ')'  shift, and go to state 192


state 183

   29 atomic_stmt: RETURN sub_expression ';' .

    $default  reduce using rule 29 (atomic_stmt)


state 184

  102 print: PRINT '(' STRING . ')' ';'
  103      | PRINT '(' STRING . ',' IDENTIFIER ')' ';'

    ','  shift, and go to state 193
    ')'  shift, and go to state 194


state 185

  101 scan: SCAN '(' STRING . ',' '&' IDENTIFIER ')' ';'

    ','  shift, and go to state 195


state 186

   39 if_block: IF '(' expression ')' . stmt
   40         | IF '(' expression ')' . stmt ELSE stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 196
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 187

   44 switch_block: SWITCH '(' expression ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 197
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 188

   49 expression: expression ',' sub_expression .
   51 sub_expression: sub_expression . '>' sub_expression
   52               | sub_expression . '<' sub_expression
   53               | sub_expression . EQ sub_expression
   54               | sub_expression . NE sub_expression
   55               | sub_expression . LE sub_expression
   56               | sub_expression . GE sub_expression
   57               | sub_expression . SHR sub_expression
   58               | sub_expression . SHL sub_expression
   59               | sub_expression . '^' sub_expression
   60               | sub_expression . '|' sub_expression
   61               | sub_expression . '&' sub_expression
   62               | sub_expression . LOGIC_AND sub_expression
   63               | sub_expression . LOGIC_OR sub_expression

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 49 (expression)


state 189

   45 case_block: CASE expression ':' stmt .

    $default  reduce using rule 45 (case_block)


state 190

   41 for_block: FOR '(' expression_statement expression_statement . ')' stmt
   42          | FOR '(' expression_statement expression_statement . expression_statement ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ')'         shift, and go to state 198
    ';'         shift, and go to state 179

    expression_statement   go to state 199
    expression             go to state 181
    sub_expression         go to state 163
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 191

   47 expression_statement: expression ';' .

    $default  reduce using rule 47 (expression_statement)


state 192

   43 while_block: WHILE '(' expression ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 200
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 193

  103 print: PRINT '(' STRING ',' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 201


state 194

  102 print: PRINT '(' STRING ')' . ';'

    ';'  shift, and go to state 202


state 195

  101 scan: SCAN '(' STRING ',' . '&' IDENTIFIER ')' ';'

    '&'  shift, and go to state 203


state 196

   39 if_block: IF '(' expression ')' stmt .
   40         | IF '(' expression ')' stmt . ELSE stmt

    $default  reduce using rule 39 (if_block)


state 197

   44 switch_block: SWITCH '(' expression ')' stmt .

    $default  reduce using rule 44 (switch_block)


state 198

   41 for_block: FOR '(' expression_statement expression_statement ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 204
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 199

   42 for_block: FOR '(' expression_statement expression_statement expression_statement . ')' stmt

    ')'  shift, and go to state 205


state 200

   43 while_block: WHILE '(' expression ')' stmt .

    $default  reduce using rule 43 (while_block)


state 201

  103 print: PRINT '(' STRING ',' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 206


state 202

  102 print: PRINT '(' STRING ')' ';' .

    $default  reduce using rule 102 (print)


state 203

  101 scan: SCAN '(' STRING ',' '&' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 207


state 204

   41 for_block: FOR '(' expression_statement expression_statement ')' stmt .

    $default  reduce using rule 41 (for_block)


state 205

   42 for_block: FOR '(' expression_statement expression_statement expression_statement ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    BREAK        shift, and go to state 140
    CONTINUE     shift, and go to state 141
    RETURN       shift, and go to state 142
    PRINT        shift, and go to state 143
    SCAN         shift, and go to state 144
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 146
    stmt               go to state 208
    atomic_stmt        go to state 148
    declaration        go to state 149
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 150
    for_block          go to state 151
    while_block        go to state 152
    switch_block       go to state 153
    case_block         go to state 154
    assign_expression  go to state 16
    function_invoke    go to state 155
    unary_expression   go to state 17
    identifier         go to state 156
    data_type          go to state 157
    scan               go to state 158
    print              go to state 159
    lhs                go to state 20
    array_indexing     go to state 21


state 206

  103 print: PRINT '(' STRING ',' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 209


state 207

  101 scan: SCAN '(' STRING ',' '&' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 210


state 208

   42 for_block: FOR '(' expression_statement expression_statement expression_statement ')' stmt .

    $default  reduce using rule 42 (for_block)


state 209

  103 print: PRINT '(' STRING ',' IDENTIFIER ')' ';' .

    $default  reduce using rule 103 (print)


state 210

  101 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 211


state 211

  101 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' ';' .

    $default  reduce using rule 101 (scan)
