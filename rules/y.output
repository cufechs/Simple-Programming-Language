Terminals which are not used

   WHITESPACE
   STRING_TYPE
   PRE_DEC
   PRE_INC
   SUF_DEC
   SUF_INC
   PRECEED_FUNC


Grammar

    0 $accept: start $end

    1 start: start line_stmt
    2      | line_stmt

    3 line_stmt: function
    4          | declaration

    5 function: data_type IDENTIFIER '(' argument_list ')' scope_stmt
    6         | data_type IDENTIFIER '(' argument_list ')' ';'

    7 argument_list: arguments
    8              | /* empty */

    9 arguments: arguments ',' argument
   10          | argument

   11 argument: data_type identifier

   12 scope_stmt: '{' stmts '}'

   13 stmts: stmts stmt
   14      | /* empty */

   15 stmt: scope_stmt
   16     | atomic_stmt

   17 atomic_stmt: if_block
   18            | while_block
   19            | for_block
   20            | switch_block
   21            | do_while_block ';'
   22            | case_block
   23            | declaration
   24            | print
   25            | scan
   26            | function_invoke ';'
   27            | RETURN ';'
   28            | CONTINUE ';'
   29            | BREAK ';'
   30            | RETURN sub_expression ';'

   31 declaration: data_type declaration_list ';'
   32            | CONST data_type declaration_list ';'
   33            | declaration_list ';'
   34            | unary_expression ';'

   35 declaration_list: declaration_list ',' sub_declaration
   36                 | sub_declaration

   37 sub_declaration: assign_expression
   38                | identifier
   39                | array_indexing

   40 if_block: IF '(' expression ')' stmt
   41         | IF '(' expression ')' stmt ELSE stmt

   42 for_block: FOR '(' expression_statement expression_statement ')' stmt
   43          | FOR '(' expression_statement expression_statement expression_statement ')' stmt

   44 while_block: WHILE '(' expression ')' stmt

   45 do_while_block: DO stmt WHILE '(' expression ')'

   46 switch_block: SWITCH '(' expression ')' stmt

   47 case_block: CASE expression ':' stmt
   48           | DEFAULT ':' stmt

   49 expression_statement: expression ';'
   50                     | ';'

   51 expression: expression ',' sub_expression
   52           | sub_expression

   53 sub_expression: sub_expression '>' sub_expression
   54               | sub_expression '<' sub_expression
   55               | sub_expression EQ sub_expression
   56               | sub_expression NE sub_expression
   57               | sub_expression LE sub_expression
   58               | sub_expression GE sub_expression
   59               | sub_expression SHR sub_expression
   60               | sub_expression SHL sub_expression
   61               | sub_expression '^' sub_expression
   62               | sub_expression '|' sub_expression
   63               | sub_expression '&' sub_expression
   64               | sub_expression LOGIC_AND sub_expression
   65               | sub_expression LOGIC_OR sub_expression
   66               | '!' sub_expression
   67               | arithmetic_expression
   68               | assign_expression
   69               | unary_expression

   70 assign_expression: lhs assign_operation arithmetic_expression
   71                  | lhs assign_operation array_indexing
   72                  | lhs assign_operation function_invoke
   73                  | lhs assign_operation unary_expression

   74 function_invoke: identifier '(' parameter_list ')'
   75                | identifier '(' ')'

   76 parameter_list: parameter_list ',' parameter
   77               | parameter

   78 parameter: sub_expression
   79          | STRING

   80 arithmetic_expression: arithmetic_expression '+' arithmetic_expression
   81                      | arithmetic_expression '-' arithmetic_expression
   82                      | arithmetic_expression '*' arithmetic_expression
   83                      | arithmetic_expression '/' arithmetic_expression
   84                      | arithmetic_expression '%' arithmetic_expression
   85                      | '(' arithmetic_expression ')'
   86                      | '-' arithmetic_expression
   87                      | identifier
   88                      | primitive_constants

   89 unary_expression: IDENTIFIER INC
   90                 | IDENTIFIER DEC
   91                 | INC IDENTIFIER
   92                 | DEC IDENTIFIER

   93 identifier: IDENTIFIER

   94 data_type: INT_TYPE
   95          | DOUBLE_TYPE
   96          | BOOL_TYPE
   97          | CHAR_TYPE
   98          | VOID

   99 primitive_constants: INTEGER
  100                    | CHAR
  101                    | DOUBLE
  102                    | BOOL

  103 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' ';'

  104 print: PRINT '(' STRING ')' ';'
  105      | PRINT '(' STRING ',' IDENTIFIER ')' ';'
  106      | PRINT '(' STRING ',' primitive_constants ')' ';'

  107 lhs: identifier
  108    | array_indexing

  109 array_indexing: identifier '[' array_index ']'
  110               | identifier '[' array_index ']' '[' array_index ']'

  111 array_index: primitive_constants
  112            | identifier

  113 assign_operation: '='
  114                 | ADD_EQ
  115                 | SUB_EQ
  116                 | MULT_EQ
  117                 | DIV_EQ


Terminals, with rules where they appear

$end (0) 0
'!' (33) 66
'%' (37) 84
'&' (38) 63 103
'(' (40) 5 6 40 41 42 43 44 45 46 74 75 85 103 104 105 106
')' (41) 5 6 40 41 42 43 44 45 46 74 75 85 103 104 105 106
'*' (42) 82
'+' (43) 80
',' (44) 9 35 51 76 103 105 106
'-' (45) 81 86
'/' (47) 83
':' (58) 47 48
';' (59) 6 21 26 27 28 29 30 31 32 33 34 49 50 103 104 105 106
'<' (60) 54
'=' (61) 113
'>' (62) 53
'[' (91) 109 110
']' (93) 109 110
'^' (94) 61
'{' (123) 12
'|' (124) 62
'}' (125) 12
error (256)
INT_TYPE (258) 94
DOUBLE_TYPE (259) 95
CHAR_TYPE (260) 97
BOOL_TYPE (261) 96
VOID (262) 98
CONST (263) 32
IF (264) 40 41
ELSE (265) 41
SWITCH (266) 46
CASE (267) 47
DEFAULT (268) 48
FOR (269) 42 43
WHILE (270) 44 45
DO (271) 45
BREAK (272) 29
CONTINUE (273) 28
RETURN (274) 27 30
PRINT (275) 104 105 106
SCAN (276) 103
STRING (277) 79 103 104 105 106
WHITESPACE (278)
STRING_TYPE (279)
INC (280) 89 91
DEC (281) 90 92
ADD_EQ (282) 114
SUB_EQ (283) 115
MULT_EQ (284) 116
DIV_EQ (285) 117
SHL (286) 60
SHR (287) 59
LOGIC_AND (288) 64
LOGIC_OR (289) 65
EQ (290) 55
NE (291) 56
GE (292) 58
LE (293) 57
INTEGER (294) 99
DOUBLE (295) 101
CHAR (296) 100
BOOL (297) 102
IDENTIFIER (298) 5 6 89 90 91 92 93 103 105
PRE_DEC (299)
PRE_INC (300)
SUF_DEC (301)
SUF_INC (302)
PRECEED_ELSE (303)
UMINUS (304)
PRECEED_FUNC (305)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
start (73)
    on left: 1 2, on right: 0 1
line_stmt (74)
    on left: 3 4, on right: 1 2
function (75)
    on left: 5 6, on right: 3
argument_list (76)
    on left: 7 8, on right: 5 6
arguments (77)
    on left: 9 10, on right: 7 9
argument (78)
    on left: 11, on right: 9 10
scope_stmt (79)
    on left: 12, on right: 5 15
stmts (80)
    on left: 13 14, on right: 12 13
stmt (81)
    on left: 15 16, on right: 13 40 41 42 43 44 45 46 47 48
atomic_stmt (82)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30,
    on right: 16
declaration (83)
    on left: 31 32 33 34, on right: 4 23
declaration_list (84)
    on left: 35 36, on right: 31 32 33 35
sub_declaration (85)
    on left: 37 38 39, on right: 35 36
if_block (86)
    on left: 40 41, on right: 17
for_block (87)
    on left: 42 43, on right: 19
while_block (88)
    on left: 44, on right: 18
do_while_block (89)
    on left: 45, on right: 21
switch_block (90)
    on left: 46, on right: 20
case_block (91)
    on left: 47 48, on right: 22
expression_statement (92)
    on left: 49 50, on right: 42 43
expression (93)
    on left: 51 52, on right: 40 41 44 45 46 47 49 51
sub_expression (94)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69,
    on right: 30 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 78
assign_expression (95)
    on left: 70 71 72 73, on right: 37 68
function_invoke (96)
    on left: 74 75, on right: 26 72
parameter_list (97)
    on left: 76 77, on right: 74 76
parameter (98)
    on left: 78 79, on right: 76 77
arithmetic_expression (99)
    on left: 80 81 82 83 84 85 86 87 88, on right: 67 70 80 81 82 83
    84 85 86
unary_expression (100)
    on left: 89 90 91 92, on right: 34 69 73
identifier (101)
    on left: 93, on right: 11 38 74 75 87 107 109 110 112
data_type (102)
    on left: 94 95 96 97 98, on right: 5 6 11 31 32
primitive_constants (103)
    on left: 99 100 101 102, on right: 88 106 111
scan (104)
    on left: 103, on right: 25
print (105)
    on left: 104 105 106, on right: 24
lhs (106)
    on left: 107 108, on right: 70 71 72 73
array_indexing (107)
    on left: 109 110, on right: 39 71 108
array_index (108)
    on left: 111 112, on right: 109 110
assign_operation (109)
    on left: 113 114 115 116 117, on right: 70 71 72 73


state 0

    0 $accept: . start $end

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9

    start              go to state 10
    line_stmt          go to state 11
    function           go to state 12
    declaration        go to state 13
    declaration_list   go to state 14
    sub_declaration    go to state 15
    assign_expression  go to state 16
    unary_expression   go to state 17
    identifier         go to state 18
    data_type          go to state 19
    lhs                go to state 20
    array_indexing     go to state 21


state 1

   94 data_type: INT_TYPE .

    $default  reduce using rule 94 (data_type)


state 2

   95 data_type: DOUBLE_TYPE .

    $default  reduce using rule 95 (data_type)


state 3

   97 data_type: CHAR_TYPE .

    $default  reduce using rule 97 (data_type)


state 4

   96 data_type: BOOL_TYPE .

    $default  reduce using rule 96 (data_type)


state 5

   98 data_type: VOID .

    $default  reduce using rule 98 (data_type)


state 6

   32 declaration: CONST . data_type declaration_list ';'

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    data_type  go to state 22


state 7

   91 unary_expression: INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


state 8

   92 unary_expression: DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


state 9

   89 unary_expression: IDENTIFIER . INC
   90                 | IDENTIFIER . DEC
   93 identifier: IDENTIFIER .

    INC  shift, and go to state 25
    DEC  shift, and go to state 26

    $default  reduce using rule 93 (identifier)


state 10

    0 $accept: start . $end
    1 start: start . line_stmt

    $end         shift, and go to state 27
    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9

    line_stmt          go to state 28
    function           go to state 12
    declaration        go to state 13
    declaration_list   go to state 14
    sub_declaration    go to state 15
    assign_expression  go to state 16
    unary_expression   go to state 17
    identifier         go to state 18
    data_type          go to state 19
    lhs                go to state 20
    array_indexing     go to state 21


state 11

    2 start: line_stmt .

    $default  reduce using rule 2 (start)


state 12

    3 line_stmt: function .

    $default  reduce using rule 3 (line_stmt)


state 13

    4 line_stmt: declaration .

    $default  reduce using rule 4 (line_stmt)


state 14

   33 declaration: declaration_list . ';'
   35 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 29
    ';'  shift, and go to state 30


state 15

   36 declaration_list: sub_declaration .

    $default  reduce using rule 36 (declaration_list)


state 16

   37 sub_declaration: assign_expression .

    $default  reduce using rule 37 (sub_declaration)


state 17

   34 declaration: unary_expression . ';'

    ';'  shift, and go to state 31


state 18

   38 sub_declaration: identifier .
  107 lhs: identifier .
  109 array_indexing: identifier . '[' array_index ']'
  110               | identifier . '[' array_index ']' '[' array_index ']'

    '['  shift, and go to state 32

    ','       reduce using rule 38 (sub_declaration)
    ';'       reduce using rule 38 (sub_declaration)
    $default  reduce using rule 107 (lhs)


state 19

    5 function: data_type . IDENTIFIER '(' argument_list ')' scope_stmt
    6         | data_type . IDENTIFIER '(' argument_list ')' ';'
   31 declaration: data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 33

    declaration_list   go to state 34
    sub_declaration    go to state 15
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 20

   70 assign_expression: lhs . assign_operation arithmetic_expression
   71                  | lhs . assign_operation array_indexing
   72                  | lhs . assign_operation function_invoke
   73                  | lhs . assign_operation unary_expression

    ADD_EQ   shift, and go to state 35
    SUB_EQ   shift, and go to state 36
    MULT_EQ  shift, and go to state 37
    DIV_EQ   shift, and go to state 38
    '='      shift, and go to state 39

    assign_operation  go to state 40


state 21

   39 sub_declaration: array_indexing .
  108 lhs: array_indexing .

    ','       reduce using rule 39 (sub_declaration)
    ';'       reduce using rule 39 (sub_declaration)
    $default  reduce using rule 108 (lhs)


state 22

   32 declaration: CONST data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 41

    declaration_list   go to state 42
    sub_declaration    go to state 15
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 23

   91 unary_expression: INC IDENTIFIER .

    $default  reduce using rule 91 (unary_expression)


state 24

   92 unary_expression: DEC IDENTIFIER .

    $default  reduce using rule 92 (unary_expression)


state 25

   89 unary_expression: IDENTIFIER INC .

    $default  reduce using rule 89 (unary_expression)


state 26

   90 unary_expression: IDENTIFIER DEC .

    $default  reduce using rule 90 (unary_expression)


state 27

    0 $accept: start $end .

    $default  accept


state 28

    1 start: start line_stmt .

    $default  reduce using rule 1 (start)


state 29

   35 declaration_list: declaration_list ',' . sub_declaration

    IDENTIFIER  shift, and go to state 41

    sub_declaration    go to state 43
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 30

   33 declaration: declaration_list ';' .

    $default  reduce using rule 33 (declaration)


state 31

   34 declaration: unary_expression ';' .

    $default  reduce using rule 34 (declaration)


state 32

  109 array_indexing: identifier '[' . array_index ']'
  110               | identifier '[' . array_index ']' '[' array_index ']'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41

    identifier           go to state 48
    primitive_constants  go to state 49
    array_index          go to state 50


state 33

    5 function: data_type IDENTIFIER . '(' argument_list ')' scope_stmt
    6         | data_type IDENTIFIER . '(' argument_list ')' ';'
   93 identifier: IDENTIFIER .

    '('  shift, and go to state 51

    $default  reduce using rule 93 (identifier)


state 34

   31 declaration: data_type declaration_list . ';'
   35 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 29
    ';'  shift, and go to state 52


state 35

  114 assign_operation: ADD_EQ .

    $default  reduce using rule 114 (assign_operation)


state 36

  115 assign_operation: SUB_EQ .

    $default  reduce using rule 115 (assign_operation)


state 37

  116 assign_operation: MULT_EQ .

    $default  reduce using rule 116 (assign_operation)


state 38

  117 assign_operation: DIV_EQ .

    $default  reduce using rule 117 (assign_operation)


state 39

  113 assign_operation: '=' .

    $default  reduce using rule 113 (assign_operation)


state 40

   70 assign_expression: lhs assign_operation . arithmetic_expression
   71                  | lhs assign_operation . array_indexing
   72                  | lhs assign_operation . function_invoke
   73                  | lhs assign_operation . unary_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    function_invoke        go to state 55
    arithmetic_expression  go to state 56
    unary_expression       go to state 57
    identifier             go to state 58
    primitive_constants    go to state 59
    array_indexing         go to state 60


state 41

   93 identifier: IDENTIFIER .

    $default  reduce using rule 93 (identifier)


state 42

   32 declaration: CONST data_type declaration_list . ';'
   35 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 29
    ';'  shift, and go to state 61


state 43

   35 declaration_list: declaration_list ',' sub_declaration .

    $default  reduce using rule 35 (declaration_list)


state 44

   99 primitive_constants: INTEGER .

    $default  reduce using rule 99 (primitive_constants)


state 45

  101 primitive_constants: DOUBLE .

    $default  reduce using rule 101 (primitive_constants)


state 46

  100 primitive_constants: CHAR .

    $default  reduce using rule 100 (primitive_constants)


state 47

  102 primitive_constants: BOOL .

    $default  reduce using rule 102 (primitive_constants)


state 48

  112 array_index: identifier .

    $default  reduce using rule 112 (array_index)


state 49

  111 array_index: primitive_constants .

    $default  reduce using rule 111 (array_index)


state 50

  109 array_indexing: identifier '[' array_index . ']'
  110               | identifier '[' array_index . ']' '[' array_index ']'

    ']'  shift, and go to state 62


state 51

    5 function: data_type IDENTIFIER '(' . argument_list ')' scope_stmt
    6         | data_type IDENTIFIER '(' . argument_list ')' ';'

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    $default  reduce using rule 8 (argument_list)

    argument_list  go to state 63
    arguments      go to state 64
    argument       go to state 65
    data_type      go to state 66


state 52

   31 declaration: data_type declaration_list ';' .

    $default  reduce using rule 31 (declaration)


state 53

   86 arithmetic_expression: '-' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 67
    identifier             go to state 68
    primitive_constants    go to state 59


state 54

   85 arithmetic_expression: '(' . arithmetic_expression ')'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 69
    identifier             go to state 68
    primitive_constants    go to state 59


state 55

   72 assign_expression: lhs assign_operation function_invoke .

    $default  reduce using rule 72 (assign_expression)


state 56

   70 assign_expression: lhs assign_operation arithmetic_expression .
   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 70 (assign_expression)


state 57

   73 assign_expression: lhs assign_operation unary_expression .

    $default  reduce using rule 73 (assign_expression)


state 58

   74 function_invoke: identifier . '(' parameter_list ')'
   75                | identifier . '(' ')'
   87 arithmetic_expression: identifier .
  109 array_indexing: identifier . '[' array_index ']'
  110               | identifier . '[' array_index ']' '[' array_index ']'

    '('  shift, and go to state 75
    '['  shift, and go to state 32

    $default  reduce using rule 87 (arithmetic_expression)


state 59

   88 arithmetic_expression: primitive_constants .

    $default  reduce using rule 88 (arithmetic_expression)


state 60

   71 assign_expression: lhs assign_operation array_indexing .

    $default  reduce using rule 71 (assign_expression)


state 61

   32 declaration: CONST data_type declaration_list ';' .

    $default  reduce using rule 32 (declaration)


state 62

  109 array_indexing: identifier '[' array_index ']' .
  110               | identifier '[' array_index ']' . '[' array_index ']'

    '['  shift, and go to state 76

    $default  reduce using rule 109 (array_indexing)


state 63

    5 function: data_type IDENTIFIER '(' argument_list . ')' scope_stmt
    6         | data_type IDENTIFIER '(' argument_list . ')' ';'

    ')'  shift, and go to state 77


state 64

    7 argument_list: arguments .
    9 arguments: arguments . ',' argument

    ','  shift, and go to state 78

    $default  reduce using rule 7 (argument_list)


state 65

   10 arguments: argument .

    $default  reduce using rule 10 (arguments)


state 66

   11 argument: data_type . identifier

    IDENTIFIER  shift, and go to state 41

    identifier  go to state 79


state 67

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression
   86                      | '-' arithmetic_expression .

    $default  reduce using rule 86 (arithmetic_expression)


state 68

   87 arithmetic_expression: identifier .

    $default  reduce using rule 87 (arithmetic_expression)


state 69

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression
   85                      | '(' arithmetic_expression . ')'

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74
    ')'  shift, and go to state 80


state 70

   81 arithmetic_expression: arithmetic_expression '-' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 81
    identifier             go to state 68
    primitive_constants    go to state 59


state 71

   80 arithmetic_expression: arithmetic_expression '+' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 82
    identifier             go to state 68
    primitive_constants    go to state 59


state 72

   82 arithmetic_expression: arithmetic_expression '*' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 83
    identifier             go to state 68
    primitive_constants    go to state 59


state 73

   83 arithmetic_expression: arithmetic_expression '/' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 84
    identifier             go to state 68
    primitive_constants    go to state 59


state 74

   84 arithmetic_expression: arithmetic_expression '%' . arithmetic_expression

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41
    '-'         shift, and go to state 53
    '('         shift, and go to state 54

    arithmetic_expression  go to state 85
    identifier             go to state 68
    primitive_constants    go to state 59


state 75

   74 function_invoke: identifier '(' . parameter_list ')'
   75                | identifier '(' . ')'

    STRING      shift, and go to state 86
    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ')'         shift, and go to state 88

    sub_expression         go to state 89
    assign_expression      go to state 90
    parameter_list         go to state 91
    parameter              go to state 92
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 76

  110 array_indexing: identifier '[' array_index ']' '[' . array_index ']'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 41

    identifier           go to state 48
    primitive_constants  go to state 49
    array_index          go to state 97


state 77

    5 function: data_type IDENTIFIER '(' argument_list ')' . scope_stmt
    6         | data_type IDENTIFIER '(' argument_list ')' . ';'

    ';'  shift, and go to state 98
    '{'  shift, and go to state 99

    scope_stmt  go to state 100


state 78

    9 arguments: arguments ',' . argument

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    argument   go to state 101
    data_type  go to state 66


state 79

   11 argument: data_type identifier .

    $default  reduce using rule 11 (argument)


state 80

   85 arithmetic_expression: '(' arithmetic_expression ')' .

    $default  reduce using rule 85 (arithmetic_expression)


state 81

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   81                      | arithmetic_expression '-' arithmetic_expression .
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 81 (arithmetic_expression)


state 82

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   80                      | arithmetic_expression '+' arithmetic_expression .
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 80 (arithmetic_expression)


state 83

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   82                      | arithmetic_expression '*' arithmetic_expression .
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression

    $default  reduce using rule 82 (arithmetic_expression)


state 84

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   83                      | arithmetic_expression '/' arithmetic_expression .
   84                      | arithmetic_expression . '%' arithmetic_expression

    $default  reduce using rule 83 (arithmetic_expression)


state 85

   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression
   84                      | arithmetic_expression '%' arithmetic_expression .

    $default  reduce using rule 84 (arithmetic_expression)


state 86

   79 parameter: STRING .

    $default  reduce using rule 79 (parameter)


state 87

   66 sub_expression: '!' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 102
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 88

   75 function_invoke: identifier '(' ')' .

    $default  reduce using rule 75 (function_invoke)


state 89

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression
   78 parameter: sub_expression .

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 78 (parameter)


state 90

   68 sub_expression: assign_expression .

    $default  reduce using rule 68 (sub_expression)


state 91

   74 function_invoke: identifier '(' parameter_list . ')'
   76 parameter_list: parameter_list . ',' parameter

    ','  shift, and go to state 116
    ')'  shift, and go to state 117


state 92

   77 parameter_list: parameter .

    $default  reduce using rule 77 (parameter_list)


state 93

   67 sub_expression: arithmetic_expression .
   80 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   81                      | arithmetic_expression . '-' arithmetic_expression
   82                      | arithmetic_expression . '*' arithmetic_expression
   83                      | arithmetic_expression . '/' arithmetic_expression
   84                      | arithmetic_expression . '%' arithmetic_expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 67 (sub_expression)


state 94

   69 sub_expression: unary_expression .

    $default  reduce using rule 69 (sub_expression)


state 95

   87 arithmetic_expression: identifier .
  107 lhs: identifier .
  109 array_indexing: identifier . '[' array_index ']'
  110               | identifier . '[' array_index ']' '[' array_index ']'

    '['  shift, and go to state 32

    ADD_EQ    reduce using rule 107 (lhs)
    SUB_EQ    reduce using rule 107 (lhs)
    MULT_EQ   reduce using rule 107 (lhs)
    DIV_EQ    reduce using rule 107 (lhs)
    '='       reduce using rule 107 (lhs)
    $default  reduce using rule 87 (arithmetic_expression)


state 96

  108 lhs: array_indexing .

    $default  reduce using rule 108 (lhs)


state 97

  110 array_indexing: identifier '[' array_index ']' '[' array_index . ']'

    ']'  shift, and go to state 118


state 98

    6 function: data_type IDENTIFIER '(' argument_list ')' ';' .

    $default  reduce using rule 6 (function)


state 99

   12 scope_stmt: '{' . stmts '}'

    $default  reduce using rule 14 (stmts)

    stmts  go to state 119


state 100

    5 function: data_type IDENTIFIER '(' argument_list ')' scope_stmt .

    $default  reduce using rule 5 (function)


state 101

    9 arguments: arguments ',' argument .

    $default  reduce using rule 9 (arguments)


state 102

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression
   66               | '!' sub_expression .

    $default  reduce using rule 66 (sub_expression)


state 103

   60 sub_expression: sub_expression SHL . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 120
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 104

   59 sub_expression: sub_expression SHR . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 121
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 105

   64 sub_expression: sub_expression LOGIC_AND . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 122
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 106

   65 sub_expression: sub_expression LOGIC_OR . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 123
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 107

   55 sub_expression: sub_expression EQ . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 124
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 108

   56 sub_expression: sub_expression NE . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 125
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 109

   58 sub_expression: sub_expression GE . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 126
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 110

   57 sub_expression: sub_expression LE . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 127
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 111

   62 sub_expression: sub_expression '|' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 128
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 112

   61 sub_expression: sub_expression '^' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 129
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 113

   63 sub_expression: sub_expression '&' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 130
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 114

   54 sub_expression: sub_expression '<' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 131
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 115

   53 sub_expression: sub_expression '>' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 132
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 116

   76 parameter_list: parameter_list ',' . parameter

    STRING      shift, and go to state 86
    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 89
    assign_expression      go to state 90
    parameter              go to state 133
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 117

   74 function_invoke: identifier '(' parameter_list ')' .

    $default  reduce using rule 74 (function_invoke)


state 118

  110 array_indexing: identifier '[' array_index ']' '[' array_index ']' .

    $default  reduce using rule 110 (array_indexing)


state 119

   12 scope_stmt: '{' stmts . '}'
   13 stmts: stmts . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99
    '}'          shift, and go to state 146

    scope_stmt         go to state 147
    stmt               go to state 148
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 120

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   60               | sub_expression SHL sub_expression .
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 60 (sub_expression)


state 121

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   59               | sub_expression SHR sub_expression .
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 59 (sub_expression)


state 122

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   64               | sub_expression LOGIC_AND sub_expression .
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '|'  shift, and go to state 111
    '^'  shift, and go to state 112
    '&'  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 64 (sub_expression)


state 123

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression
   65               | sub_expression LOGIC_OR sub_expression .

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 65 (sub_expression)


state 124

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   55               | sub_expression EQ sub_expression .
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 55 (sub_expression)


state 125

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   56               | sub_expression NE sub_expression .
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 56 (sub_expression)


state 126

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   58               | sub_expression GE sub_expression .
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 58 (sub_expression)


state 127

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   57               | sub_expression LE sub_expression .
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 57 (sub_expression)


state 128

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   62               | sub_expression '|' sub_expression .
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '^'  shift, and go to state 112
    '&'  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 62 (sub_expression)


state 129

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   61               | sub_expression '^' sub_expression .
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '&'  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 61 (sub_expression)


state 130

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   63               | sub_expression '&' sub_expression .
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104
    EQ   shift, and go to state 107
    NE   shift, and go to state 108
    GE   shift, and go to state 109
    LE   shift, and go to state 110
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115

    $default  reduce using rule 63 (sub_expression)


state 131

   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   54               | sub_expression '<' sub_expression .
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 54 (sub_expression)


state 132

   53 sub_expression: sub_expression . '>' sub_expression
   53               | sub_expression '>' sub_expression .
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL  shift, and go to state 103
    SHR  shift, and go to state 104

    $default  reduce using rule 53 (sub_expression)


state 133

   76 parameter_list: parameter_list ',' parameter .

    $default  reduce using rule 76 (parameter_list)


state 134

   40 if_block: IF . '(' expression ')' stmt
   41         | IF . '(' expression ')' stmt ELSE stmt

    '('  shift, and go to state 162


state 135

   46 switch_block: SWITCH . '(' expression ')' stmt

    '('  shift, and go to state 163


state 136

   47 case_block: CASE . expression ':' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 164
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 137

   48 case_block: DEFAULT . ':' stmt

    ':'  shift, and go to state 166


state 138

   42 for_block: FOR . '(' expression_statement expression_statement ')' stmt
   43          | FOR . '(' expression_statement expression_statement expression_statement ')' stmt

    '('  shift, and go to state 167


state 139

   44 while_block: WHILE . '(' expression ')' stmt

    '('  shift, and go to state 168


state 140

   45 do_while_block: DO . stmt WHILE '(' expression ')'

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 169
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 141

   29 atomic_stmt: BREAK . ';'

    ';'  shift, and go to state 170


state 142

   28 atomic_stmt: CONTINUE . ';'

    ';'  shift, and go to state 171


state 143

   27 atomic_stmt: RETURN . ';'
   30            | RETURN . sub_expression ';'

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ';'         shift, and go to state 172

    sub_expression         go to state 173
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 144

  104 print: PRINT . '(' STRING ')' ';'
  105      | PRINT . '(' STRING ',' IDENTIFIER ')' ';'
  106      | PRINT . '(' STRING ',' primitive_constants ')' ';'

    '('  shift, and go to state 174


state 145

  103 scan: SCAN . '(' STRING ',' '&' IDENTIFIER ')' ';'

    '('  shift, and go to state 175


state 146

   12 scope_stmt: '{' stmts '}' .

    $default  reduce using rule 12 (scope_stmt)


state 147

   15 stmt: scope_stmt .

    $default  reduce using rule 15 (stmt)


state 148

   13 stmts: stmts stmt .

    $default  reduce using rule 13 (stmts)


state 149

   16 stmt: atomic_stmt .

    $default  reduce using rule 16 (stmt)


state 150

   23 atomic_stmt: declaration .

    $default  reduce using rule 23 (atomic_stmt)


state 151

   17 atomic_stmt: if_block .

    $default  reduce using rule 17 (atomic_stmt)


state 152

   19 atomic_stmt: for_block .

    $default  reduce using rule 19 (atomic_stmt)


state 153

   18 atomic_stmt: while_block .

    $default  reduce using rule 18 (atomic_stmt)


state 154

   21 atomic_stmt: do_while_block . ';'

    ';'  shift, and go to state 176


state 155

   20 atomic_stmt: switch_block .

    $default  reduce using rule 20 (atomic_stmt)


state 156

   22 atomic_stmt: case_block .

    $default  reduce using rule 22 (atomic_stmt)


state 157

   26 atomic_stmt: function_invoke . ';'

    ';'  shift, and go to state 177


state 158

   38 sub_declaration: identifier .
   74 function_invoke: identifier . '(' parameter_list ')'
   75                | identifier . '(' ')'
  107 lhs: identifier .
  109 array_indexing: identifier . '[' array_index ']'
  110               | identifier . '[' array_index ']' '[' array_index ']'

    '('  shift, and go to state 75
    '['  shift, and go to state 32

    ','       reduce using rule 38 (sub_declaration)
    ';'       reduce using rule 38 (sub_declaration)
    $default  reduce using rule 107 (lhs)


state 159

   31 declaration: data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 41

    declaration_list   go to state 34
    sub_declaration    go to state 15
    assign_expression  go to state 16
    identifier         go to state 18
    lhs                go to state 20
    array_indexing     go to state 21


state 160

   25 atomic_stmt: scan .

    $default  reduce using rule 25 (atomic_stmt)


state 161

   24 atomic_stmt: print .

    $default  reduce using rule 24 (atomic_stmt)


state 162

   40 if_block: IF '(' . expression ')' stmt
   41         | IF '(' . expression ')' stmt ELSE stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 178
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 163

   46 switch_block: SWITCH '(' . expression ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 179
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 164

   47 case_block: CASE expression . ':' stmt
   51 expression: expression . ',' sub_expression

    ','  shift, and go to state 180
    ':'  shift, and go to state 181


state 165

   52 expression: sub_expression .
   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 52 (expression)


state 166

   48 case_block: DEFAULT ':' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 182
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 167

   42 for_block: FOR '(' . expression_statement expression_statement ')' stmt
   43          | FOR '(' . expression_statement expression_statement expression_statement ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ';'         shift, and go to state 183

    expression_statement   go to state 184
    expression             go to state 185
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 168

   44 while_block: WHILE '(' . expression ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 186
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 169

   45 do_while_block: DO stmt . WHILE '(' expression ')'

    WHILE  shift, and go to state 187


state 170

   29 atomic_stmt: BREAK ';' .

    $default  reduce using rule 29 (atomic_stmt)


state 171

   28 atomic_stmt: CONTINUE ';' .

    $default  reduce using rule 28 (atomic_stmt)


state 172

   27 atomic_stmt: RETURN ';' .

    $default  reduce using rule 27 (atomic_stmt)


state 173

   30 atomic_stmt: RETURN sub_expression . ';'
   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115
    ';'        shift, and go to state 188


state 174

  104 print: PRINT '(' . STRING ')' ';'
  105      | PRINT '(' . STRING ',' IDENTIFIER ')' ';'
  106      | PRINT '(' . STRING ',' primitive_constants ')' ';'

    STRING  shift, and go to state 189


state 175

  103 scan: SCAN '(' . STRING ',' '&' IDENTIFIER ')' ';'

    STRING  shift, and go to state 190


state 176

   21 atomic_stmt: do_while_block ';' .

    $default  reduce using rule 21 (atomic_stmt)


state 177

   26 atomic_stmt: function_invoke ';' .

    $default  reduce using rule 26 (atomic_stmt)


state 178

   40 if_block: IF '(' expression . ')' stmt
   41         | IF '(' expression . ')' stmt ELSE stmt
   51 expression: expression . ',' sub_expression

    ','  shift, and go to state 180
    ')'  shift, and go to state 191


state 179

   46 switch_block: SWITCH '(' expression . ')' stmt
   51 expression: expression . ',' sub_expression

    ','  shift, and go to state 180
    ')'  shift, and go to state 192


state 180

   51 expression: expression ',' . sub_expression

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    sub_expression         go to state 193
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 181

   47 case_block: CASE expression ':' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 194
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 182

   48 case_block: DEFAULT ':' stmt .

    $default  reduce using rule 48 (case_block)


state 183

   50 expression_statement: ';' .

    $default  reduce using rule 50 (expression_statement)


state 184

   42 for_block: FOR '(' expression_statement . expression_statement ')' stmt
   43          | FOR '(' expression_statement . expression_statement expression_statement ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ';'         shift, and go to state 183

    expression_statement   go to state 195
    expression             go to state 185
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 185

   49 expression_statement: expression . ';'
   51 expression: expression . ',' sub_expression

    ','  shift, and go to state 180
    ';'  shift, and go to state 196


state 186

   44 while_block: WHILE '(' expression . ')' stmt
   51 expression: expression . ',' sub_expression

    ','  shift, and go to state 180
    ')'  shift, and go to state 197


state 187

   45 do_while_block: DO stmt WHILE . '(' expression ')'

    '('  shift, and go to state 198


state 188

   30 atomic_stmt: RETURN sub_expression ';' .

    $default  reduce using rule 30 (atomic_stmt)


state 189

  104 print: PRINT '(' STRING . ')' ';'
  105      | PRINT '(' STRING . ',' IDENTIFIER ')' ';'
  106      | PRINT '(' STRING . ',' primitive_constants ')' ';'

    ','  shift, and go to state 199
    ')'  shift, and go to state 200


state 190

  103 scan: SCAN '(' STRING . ',' '&' IDENTIFIER ')' ';'

    ','  shift, and go to state 201


state 191

   40 if_block: IF '(' expression ')' . stmt
   41         | IF '(' expression ')' . stmt ELSE stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 202
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 192

   46 switch_block: SWITCH '(' expression ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 203
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 193

   51 expression: expression ',' sub_expression .
   53 sub_expression: sub_expression . '>' sub_expression
   54               | sub_expression . '<' sub_expression
   55               | sub_expression . EQ sub_expression
   56               | sub_expression . NE sub_expression
   57               | sub_expression . LE sub_expression
   58               | sub_expression . GE sub_expression
   59               | sub_expression . SHR sub_expression
   60               | sub_expression . SHL sub_expression
   61               | sub_expression . '^' sub_expression
   62               | sub_expression . '|' sub_expression
   63               | sub_expression . '&' sub_expression
   64               | sub_expression . LOGIC_AND sub_expression
   65               | sub_expression . LOGIC_OR sub_expression

    SHL        shift, and go to state 103
    SHR        shift, and go to state 104
    LOGIC_AND  shift, and go to state 105
    LOGIC_OR   shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GE         shift, and go to state 109
    LE         shift, and go to state 110
    '|'        shift, and go to state 111
    '^'        shift, and go to state 112
    '&'        shift, and go to state 113
    '<'        shift, and go to state 114
    '>'        shift, and go to state 115

    $default  reduce using rule 51 (expression)


state 194

   47 case_block: CASE expression ':' stmt .

    $default  reduce using rule 47 (case_block)


state 195

   42 for_block: FOR '(' expression_statement expression_statement . ')' stmt
   43          | FOR '(' expression_statement expression_statement . expression_statement ')' stmt

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54
    ')'         shift, and go to state 204
    ';'         shift, and go to state 183

    expression_statement   go to state 205
    expression             go to state 185
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 196

   49 expression_statement: expression ';' .

    $default  reduce using rule 49 (expression_statement)


state 197

   44 while_block: WHILE '(' expression ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 206
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 198

   45 do_while_block: DO stmt WHILE '(' . expression ')'

    INC         shift, and go to state 7
    DEC         shift, and go to state 8
    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 9
    '-'         shift, and go to state 53
    '!'         shift, and go to state 87
    '('         shift, and go to state 54

    expression             go to state 207
    sub_expression         go to state 165
    assign_expression      go to state 90
    arithmetic_expression  go to state 93
    unary_expression       go to state 94
    identifier             go to state 95
    primitive_constants    go to state 59
    lhs                    go to state 20
    array_indexing         go to state 96


state 199

  105 print: PRINT '(' STRING ',' . IDENTIFIER ')' ';'
  106      | PRINT '(' STRING ',' . primitive_constants ')' ';'

    INTEGER     shift, and go to state 44
    DOUBLE      shift, and go to state 45
    CHAR        shift, and go to state 46
    BOOL        shift, and go to state 47
    IDENTIFIER  shift, and go to state 208

    primitive_constants  go to state 209


state 200

  104 print: PRINT '(' STRING ')' . ';'

    ';'  shift, and go to state 210


state 201

  103 scan: SCAN '(' STRING ',' . '&' IDENTIFIER ')' ';'

    '&'  shift, and go to state 211


state 202

   40 if_block: IF '(' expression ')' stmt .
   41         | IF '(' expression ')' stmt . ELSE stmt

    ELSE  shift, and go to state 212

    $default  reduce using rule 40 (if_block)


state 203

   46 switch_block: SWITCH '(' expression ')' stmt .

    $default  reduce using rule 46 (switch_block)


state 204

   42 for_block: FOR '(' expression_statement expression_statement ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 213
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 205

   43 for_block: FOR '(' expression_statement expression_statement expression_statement . ')' stmt

    ')'  shift, and go to state 214


state 206

   44 while_block: WHILE '(' expression ')' stmt .

    $default  reduce using rule 44 (while_block)


state 207

   45 do_while_block: DO stmt WHILE '(' expression . ')'
   51 expression: expression . ',' sub_expression

    ','  shift, and go to state 180
    ')'  shift, and go to state 215


state 208

  105 print: PRINT '(' STRING ',' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 216


state 209

  106 print: PRINT '(' STRING ',' primitive_constants . ')' ';'

    ')'  shift, and go to state 217


state 210

  104 print: PRINT '(' STRING ')' ';' .

    $default  reduce using rule 104 (print)


state 211

  103 scan: SCAN '(' STRING ',' '&' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 218


state 212

   41 if_block: IF '(' expression ')' stmt ELSE . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 219
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 213

   42 for_block: FOR '(' expression_statement expression_statement ')' stmt .

    $default  reduce using rule 42 (for_block)


state 214

   43 for_block: FOR '(' expression_statement expression_statement expression_statement ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    CONST        shift, and go to state 6
    IF           shift, and go to state 134
    SWITCH       shift, and go to state 135
    CASE         shift, and go to state 136
    DEFAULT      shift, and go to state 137
    FOR          shift, and go to state 138
    WHILE        shift, and go to state 139
    DO           shift, and go to state 140
    BREAK        shift, and go to state 141
    CONTINUE     shift, and go to state 142
    RETURN       shift, and go to state 143
    PRINT        shift, and go to state 144
    SCAN         shift, and go to state 145
    INC          shift, and go to state 7
    DEC          shift, and go to state 8
    IDENTIFIER   shift, and go to state 9
    '{'          shift, and go to state 99

    scope_stmt         go to state 147
    stmt               go to state 220
    atomic_stmt        go to state 149
    declaration        go to state 150
    declaration_list   go to state 14
    sub_declaration    go to state 15
    if_block           go to state 151
    for_block          go to state 152
    while_block        go to state 153
    do_while_block     go to state 154
    switch_block       go to state 155
    case_block         go to state 156
    assign_expression  go to state 16
    function_invoke    go to state 157
    unary_expression   go to state 17
    identifier         go to state 158
    data_type          go to state 159
    scan               go to state 160
    print              go to state 161
    lhs                go to state 20
    array_indexing     go to state 21


state 215

   45 do_while_block: DO stmt WHILE '(' expression ')' .

    $default  reduce using rule 45 (do_while_block)


state 216

  105 print: PRINT '(' STRING ',' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 221


state 217

  106 print: PRINT '(' STRING ',' primitive_constants ')' . ';'

    ';'  shift, and go to state 222


state 218

  103 scan: SCAN '(' STRING ',' '&' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 223


state 219

   41 if_block: IF '(' expression ')' stmt ELSE stmt .

    $default  reduce using rule 41 (if_block)


state 220

   43 for_block: FOR '(' expression_statement expression_statement expression_statement ')' stmt .

    $default  reduce using rule 43 (for_block)


state 221

  105 print: PRINT '(' STRING ',' IDENTIFIER ')' ';' .

    $default  reduce using rule 105 (print)


state 222

  106 print: PRINT '(' STRING ',' primitive_constants ')' ';' .

    $default  reduce using rule 106 (print)


state 223

  103 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 224


state 224

  103 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' ';' .

    $default  reduce using rule 103 (scan)
