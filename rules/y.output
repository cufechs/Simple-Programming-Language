Terminals unused in grammar

   CONST
   SWITCH
   CASE
   DEFAULT
   UNTIL
   WHITESPACE
   SHL
   SHR
   BOOL
   '|'
   '^'
   PRE_DEC
   PRE_INC
   SUF_DEC
   SUF_INC
   PRECEED_FUNC


Rules useless in parser due to conflicts

   36 if_block: IF '(' expression ')' stmt ELSE stmt


Grammar

    0 $accept: start $end

    1 start: start line_stmt
    2      | line_stmt

    3 line_stmt: function
    4          | declaration

    5 function: data_type IDENTIFIER '(' argument_list ')' scope_stmt

    6 argument_list: arguments
    7              | /* empty */

    8 arguments: arguments ',' argument
    9          | argument

   10 argument: data_type identifier

   11 scope_stmt: '{' stmts '}'

   12 stmts: stmts stmt
   13      | /* empty */

   14 stmt: scope_stmt
   15     | atomic_stmt

   16 atomic_stmt: if_block
   17            | while_block
   18            | for_block
   19            | declaration
   20            | print
   21            | scan
   22            | function_invoke ';'
   23            | RETURN ';'
   24            | CONTINUE ';'
   25            | BREAK ';'
   26            | RETURN sub_expression ';'

   27 declaration: data_type declaration_list ';'
   28            | declaration_list ';'
   29            | unary_expression ';'

   30 declaration_list: declaration_list ',' sub_declaration
   31                 | sub_declaration

   32 sub_declaration: assign_expression
   33                | identifier
   34                | array_indexing

   35 if_block: IF '(' expression ')' stmt
   36         | IF '(' expression ')' stmt ELSE stmt

   37 for_block: FOR '(' expression_statement expression_statement ')' stmt
   38          | FOR '(' expression_statement expression_statement expression_statement ')' stmt

   39 while_block: WHILE '(' expression ')' stmt

   40 expression_statement: expression ';'
   41                     | ';'

   42 expression: expression ',' sub_expression
   43           | sub_expression

   44 sub_expression: sub_expression '>' sub_expression
   45               | sub_expression '<' sub_expression
   46               | sub_expression EQ sub_expression
   47               | sub_expression NE sub_expression
   48               | sub_expression LE sub_expression
   49               | sub_expression GE sub_expression
   50               | sub_expression LOGIC_AND sub_expression
   51               | sub_expression LOGIC_OR sub_expression
   52               | '!' sub_expression
   53               | arithmetic_expression
   54               | assign_expression
   55               | unary_expression

   56 assign_expression: lhs assign_operation arithmetic_expression
   57                  | lhs assign_operation array_indexing
   58                  | lhs assign_operation function_invoke
   59                  | lhs assign_operation unary_expression

   60 function_invoke: identifier '(' parameter_list ')'
   61                | identifier '(' ')'

   62 parameter_list: parameter_list ',' parameter
   63               | parameter

   64 parameter: sub_expression
   65          | STRING

   66 arithmetic_expression: arithmetic_expression '+' arithmetic_expression
   67                      | arithmetic_expression '-' arithmetic_expression
   68                      | arithmetic_expression '*' arithmetic_expression
   69                      | arithmetic_expression '/' arithmetic_expression
   70                      | arithmetic_expression '%' arithmetic_expression
   71                      | '(' arithmetic_expression ')'
   72                      | '-' arithmetic_expression
   73                      | identifier
   74                      | primitive_constants

   75 unary_expression: IDENTIFIER INC
   76                 | IDENTIFIER DEC
   77                 | INC IDENTIFIER
   78                 | DEC IDENTIFIER

   79 identifier: IDENTIFIER

   80 data_type: INT_TYPE
   81          | DOUBLE_TYPE
   82          | BOOL_TYPE
   83          | CHAR_TYPE
   84          | VOID

   85 primitive_constants: INTEGER
   86                    | CHAR
   87                    | DOUBLE

   88 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' ';'

   89 print: PRINT '(' STRING ')' ';'
   90      | PRINT '(' STRING ',' IDENTIFIER ')' ';'

   91 lhs: identifier
   92    | array_indexing

   93 array_indexing: identifier '[' array_index ']'
   94               | identifier '[' array_index ']' '[' array_index ']'

   95 array_index: primitive_constants
   96            | identifier

   97 assign_operation: '='
   98                 | ADD_EQ
   99                 | SUB_EQ
  100                 | MULT_EQ
  101                 | DIV_EQ


Terminals, with rules where they appear

$end (0) 0
'!' (33) 52
'%' (37) 70
'&' (38) 88
'(' (40) 5 35 36 37 38 39 60 61 71 88 89 90
')' (41) 5 35 36 37 38 39 60 61 71 88 89 90
'*' (42) 68
'+' (43) 66
',' (44) 8 30 42 62 88 90
'-' (45) 67 72
'/' (47) 69
';' (59) 22 23 24 25 26 27 28 29 40 41 88 89 90
'<' (60) 45
'=' (61) 97
'>' (62) 44
'[' (91) 93 94
']' (93) 93 94
'^' (94)
'{' (123) 11
'|' (124)
'}' (125) 11
error (256)
INT_TYPE (258) 80
DOUBLE_TYPE (259) 81
CHAR_TYPE (260) 83
BOOL_TYPE (261) 82
VOID (262) 84
CONST (263)
IF (264) 35 36
ELSE (265) 36
SWITCH (266)
CASE (267)
DEFAULT (268)
FOR (269) 37 38
UNTIL (270)
WHILE (271) 39
BREAK (272) 25
CONTINUE (273) 24
RETURN (274) 23 26
PRINT (275) 89 90
SCAN (276) 88
STRING (277) 65 88 89 90
WHITESPACE (278)
INC (279) 75 77
DEC (280) 76 78
ADD_EQ (281) 98
SUB_EQ (282) 99
MULT_EQ (283) 100
DIV_EQ (284) 101
SHL (285)
SHR (286)
LOGIC_AND (287) 50
LOGIC_OR (288) 51
EQ (289) 46
NE (290) 47
GE (291) 49
LE (292) 48
INTEGER (293) 85
DOUBLE (294) 87
CHAR (295) 86
BOOL (296)
IDENTIFIER (297) 5 75 76 77 78 79 88 90
PRE_DEC (298)
PRE_INC (299)
SUF_DEC (300)
SUF_INC (301)
UMINUS (302)
PRECEED_ELSE (303)
PRECEED_FUNC (304)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
start (71)
    on left: 1 2, on right: 0 1
line_stmt (72)
    on left: 3 4, on right: 1 2
function (73)
    on left: 5, on right: 3
argument_list (74)
    on left: 6 7, on right: 5
arguments (75)
    on left: 8 9, on right: 6 8
argument (76)
    on left: 10, on right: 8 9
scope_stmt (77)
    on left: 11, on right: 5 14
stmts (78)
    on left: 12 13, on right: 11 12
stmt (79)
    on left: 14 15, on right: 12 35 36 37 38 39
atomic_stmt (80)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 15
declaration (81)
    on left: 27 28 29, on right: 4 19
declaration_list (82)
    on left: 30 31, on right: 27 28 30
sub_declaration (83)
    on left: 32 33 34, on right: 30 31
if_block (84)
    on left: 35 36, on right: 16
for_block (85)
    on left: 37 38, on right: 18
while_block (86)
    on left: 39, on right: 17
expression_statement (87)
    on left: 40 41, on right: 37 38
expression (88)
    on left: 42 43, on right: 35 36 39 40 42
sub_expression (89)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55, on right: 26 42 43
    44 45 46 47 48 49 50 51 52 64
assign_expression (90)
    on left: 56 57 58 59, on right: 32 54
function_invoke (91)
    on left: 60 61, on right: 22 58
parameter_list (92)
    on left: 62 63, on right: 60 62
parameter (93)
    on left: 64 65, on right: 62 63
arithmetic_expression (94)
    on left: 66 67 68 69 70 71 72 73 74, on right: 53 56 66 67 68 69
    70 71 72
unary_expression (95)
    on left: 75 76 77 78, on right: 29 55 59
identifier (96)
    on left: 79, on right: 10 33 60 61 73 91 93 94 96
data_type (97)
    on left: 80 81 82 83 84, on right: 5 10 27
primitive_constants (98)
    on left: 85 86 87, on right: 74 95
scan (99)
    on left: 88, on right: 21
print (100)
    on left: 89 90, on right: 20
lhs (101)
    on left: 91 92, on right: 56 57 58 59
array_indexing (102)
    on left: 93 94, on right: 34 57 92
array_index (103)
    on left: 95 96, on right: 93 94
assign_operation (104)
    on left: 97 98 99 100 101, on right: 56 57 58 59


state 0

    0 $accept: . start $end

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8

    start              go to state 9
    line_stmt          go to state 10
    function           go to state 11
    declaration        go to state 12
    declaration_list   go to state 13
    sub_declaration    go to state 14
    assign_expression  go to state 15
    unary_expression   go to state 16
    identifier         go to state 17
    data_type          go to state 18
    lhs                go to state 19
    array_indexing     go to state 20


state 1

   80 data_type: INT_TYPE .

    $default  reduce using rule 80 (data_type)


state 2

   81 data_type: DOUBLE_TYPE .

    $default  reduce using rule 81 (data_type)


state 3

   83 data_type: CHAR_TYPE .

    $default  reduce using rule 83 (data_type)


state 4

   82 data_type: BOOL_TYPE .

    $default  reduce using rule 82 (data_type)


state 5

   84 data_type: VOID .

    $default  reduce using rule 84 (data_type)


state 6

   77 unary_expression: INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


state 7

   78 unary_expression: DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


state 8

   75 unary_expression: IDENTIFIER . INC
   76                 | IDENTIFIER . DEC
   79 identifier: IDENTIFIER .

    INC  shift, and go to state 23
    DEC  shift, and go to state 24

    $default  reduce using rule 79 (identifier)


state 9

    0 $accept: start . $end
    1 start: start . line_stmt

    $end         shift, and go to state 25
    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8

    line_stmt          go to state 26
    function           go to state 11
    declaration        go to state 12
    declaration_list   go to state 13
    sub_declaration    go to state 14
    assign_expression  go to state 15
    unary_expression   go to state 16
    identifier         go to state 17
    data_type          go to state 18
    lhs                go to state 19
    array_indexing     go to state 20


state 10

    2 start: line_stmt .

    $default  reduce using rule 2 (start)


state 11

    3 line_stmt: function .

    $default  reduce using rule 3 (line_stmt)


state 12

    4 line_stmt: declaration .

    $default  reduce using rule 4 (line_stmt)


state 13

   28 declaration: declaration_list . ';'
   30 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 27
    ';'  shift, and go to state 28


state 14

   31 declaration_list: sub_declaration .

    $default  reduce using rule 31 (declaration_list)


state 15

   32 sub_declaration: assign_expression .

    $default  reduce using rule 32 (sub_declaration)


state 16

   29 declaration: unary_expression . ';'

    ';'  shift, and go to state 29


state 17

   33 sub_declaration: identifier .
   91 lhs: identifier .
   93 array_indexing: identifier . '[' array_index ']'
   94               | identifier . '[' array_index ']' '[' array_index ']'

    '['  shift, and go to state 30

    ','       reduce using rule 33 (sub_declaration)
    ';'       reduce using rule 33 (sub_declaration)
    $default  reduce using rule 91 (lhs)


state 18

    5 function: data_type . IDENTIFIER '(' argument_list ')' scope_stmt
   27 declaration: data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 31

    declaration_list   go to state 32
    sub_declaration    go to state 14
    assign_expression  go to state 15
    identifier         go to state 17
    lhs                go to state 19
    array_indexing     go to state 20


state 19

   56 assign_expression: lhs . assign_operation arithmetic_expression
   57                  | lhs . assign_operation array_indexing
   58                  | lhs . assign_operation function_invoke
   59                  | lhs . assign_operation unary_expression

    ADD_EQ   shift, and go to state 33
    SUB_EQ   shift, and go to state 34
    MULT_EQ  shift, and go to state 35
    DIV_EQ   shift, and go to state 36
    '='      shift, and go to state 37

    assign_operation  go to state 38


state 20

   34 sub_declaration: array_indexing .
   92 lhs: array_indexing .

    ','       reduce using rule 34 (sub_declaration)
    ';'       reduce using rule 34 (sub_declaration)
    $default  reduce using rule 92 (lhs)


state 21

   77 unary_expression: INC IDENTIFIER .

    $default  reduce using rule 77 (unary_expression)


state 22

   78 unary_expression: DEC IDENTIFIER .

    $default  reduce using rule 78 (unary_expression)


state 23

   75 unary_expression: IDENTIFIER INC .

    $default  reduce using rule 75 (unary_expression)


state 24

   76 unary_expression: IDENTIFIER DEC .

    $default  reduce using rule 76 (unary_expression)


state 25

    0 $accept: start $end .

    $default  accept


state 26

    1 start: start line_stmt .

    $default  reduce using rule 1 (start)


state 27

   30 declaration_list: declaration_list ',' . sub_declaration

    IDENTIFIER  shift, and go to state 39

    sub_declaration    go to state 40
    assign_expression  go to state 15
    identifier         go to state 17
    lhs                go to state 19
    array_indexing     go to state 20


state 28

   28 declaration: declaration_list ';' .

    $default  reduce using rule 28 (declaration)


state 29

   29 declaration: unary_expression ';' .

    $default  reduce using rule 29 (declaration)


state 30

   93 array_indexing: identifier '[' . array_index ']'
   94               | identifier '[' . array_index ']' '[' array_index ']'

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39

    identifier           go to state 44
    primitive_constants  go to state 45
    array_index          go to state 46


state 31

    5 function: data_type IDENTIFIER . '(' argument_list ')' scope_stmt
   79 identifier: IDENTIFIER .

    '('  shift, and go to state 47

    $default  reduce using rule 79 (identifier)


state 32

   27 declaration: data_type declaration_list . ';'
   30 declaration_list: declaration_list . ',' sub_declaration

    ','  shift, and go to state 27
    ';'  shift, and go to state 48


state 33

   98 assign_operation: ADD_EQ .

    $default  reduce using rule 98 (assign_operation)


state 34

   99 assign_operation: SUB_EQ .

    $default  reduce using rule 99 (assign_operation)


state 35

  100 assign_operation: MULT_EQ .

    $default  reduce using rule 100 (assign_operation)


state 36

  101 assign_operation: DIV_EQ .

    $default  reduce using rule 101 (assign_operation)


state 37

   97 assign_operation: '=' .

    $default  reduce using rule 97 (assign_operation)


state 38

   56 assign_expression: lhs assign_operation . arithmetic_expression
   57                  | lhs assign_operation . array_indexing
   58                  | lhs assign_operation . function_invoke
   59                  | lhs assign_operation . unary_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    function_invoke        go to state 51
    arithmetic_expression  go to state 52
    unary_expression       go to state 53
    identifier             go to state 54
    primitive_constants    go to state 55
    array_indexing         go to state 56


state 39

   79 identifier: IDENTIFIER .

    $default  reduce using rule 79 (identifier)


state 40

   30 declaration_list: declaration_list ',' sub_declaration .

    $default  reduce using rule 30 (declaration_list)


state 41

   85 primitive_constants: INTEGER .

    $default  reduce using rule 85 (primitive_constants)


state 42

   87 primitive_constants: DOUBLE .

    $default  reduce using rule 87 (primitive_constants)


state 43

   86 primitive_constants: CHAR .

    $default  reduce using rule 86 (primitive_constants)


state 44

   96 array_index: identifier .

    $default  reduce using rule 96 (array_index)


state 45

   95 array_index: primitive_constants .

    $default  reduce using rule 95 (array_index)


state 46

   93 array_indexing: identifier '[' array_index . ']'
   94               | identifier '[' array_index . ']' '[' array_index ']'

    ']'  shift, and go to state 57


state 47

    5 function: data_type IDENTIFIER '(' . argument_list ')' scope_stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    $default  reduce using rule 7 (argument_list)

    argument_list  go to state 58
    arguments      go to state 59
    argument       go to state 60
    data_type      go to state 61


state 48

   27 declaration: data_type declaration_list ';' .

    $default  reduce using rule 27 (declaration)


state 49

   72 arithmetic_expression: '-' . arithmetic_expression

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 62
    identifier             go to state 63
    primitive_constants    go to state 55


state 50

   71 arithmetic_expression: '(' . arithmetic_expression ')'

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 64
    identifier             go to state 63
    primitive_constants    go to state 55


state 51

   58 assign_expression: lhs assign_operation function_invoke .

    $default  reduce using rule 58 (assign_expression)


state 52

   56 assign_expression: lhs assign_operation arithmetic_expression .
   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression

    '-'  shift, and go to state 65
    '+'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 56 (assign_expression)


state 53

   59 assign_expression: lhs assign_operation unary_expression .

    $default  reduce using rule 59 (assign_expression)


state 54

   60 function_invoke: identifier . '(' parameter_list ')'
   61                | identifier . '(' ')'
   73 arithmetic_expression: identifier .
   93 array_indexing: identifier . '[' array_index ']'
   94               | identifier . '[' array_index ']' '[' array_index ']'

    '('  shift, and go to state 70
    '['  shift, and go to state 30

    $default  reduce using rule 73 (arithmetic_expression)


state 55

   74 arithmetic_expression: primitive_constants .

    $default  reduce using rule 74 (arithmetic_expression)


state 56

   57 assign_expression: lhs assign_operation array_indexing .

    $default  reduce using rule 57 (assign_expression)


state 57

   93 array_indexing: identifier '[' array_index ']' .
   94               | identifier '[' array_index ']' . '[' array_index ']'

    '['  shift, and go to state 71

    $default  reduce using rule 93 (array_indexing)


state 58

    5 function: data_type IDENTIFIER '(' argument_list . ')' scope_stmt

    ')'  shift, and go to state 72


state 59

    6 argument_list: arguments .
    8 arguments: arguments . ',' argument

    ','  shift, and go to state 73

    $default  reduce using rule 6 (argument_list)


state 60

    9 arguments: argument .

    $default  reduce using rule 9 (arguments)


state 61

   10 argument: data_type . identifier

    IDENTIFIER  shift, and go to state 39

    identifier  go to state 74


state 62

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression
   72                      | '-' arithmetic_expression .

    $default  reduce using rule 72 (arithmetic_expression)


state 63

   73 arithmetic_expression: identifier .

    $default  reduce using rule 73 (arithmetic_expression)


state 64

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression
   71                      | '(' arithmetic_expression . ')'

    '-'  shift, and go to state 65
    '+'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ')'  shift, and go to state 75


state 65

   67 arithmetic_expression: arithmetic_expression '-' . arithmetic_expression

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 76
    identifier             go to state 63
    primitive_constants    go to state 55


state 66

   66 arithmetic_expression: arithmetic_expression '+' . arithmetic_expression

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 77
    identifier             go to state 63
    primitive_constants    go to state 55


state 67

   68 arithmetic_expression: arithmetic_expression '*' . arithmetic_expression

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 78
    identifier             go to state 63
    primitive_constants    go to state 55


state 68

   69 arithmetic_expression: arithmetic_expression '/' . arithmetic_expression

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 79
    identifier             go to state 63
    primitive_constants    go to state 55


state 69

   70 arithmetic_expression: arithmetic_expression '%' . arithmetic_expression

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39
    '-'         shift, and go to state 49
    '('         shift, and go to state 50

    arithmetic_expression  go to state 80
    identifier             go to state 63
    primitive_constants    go to state 55


state 70

   60 function_invoke: identifier '(' . parameter_list ')'
   61                | identifier '(' . ')'

    STRING      shift, and go to state 81
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50
    ')'         shift, and go to state 83

    sub_expression         go to state 84
    assign_expression      go to state 85
    parameter_list         go to state 86
    parameter              go to state 87
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 71

   94 array_indexing: identifier '[' array_index ']' '[' . array_index ']'

    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 39

    identifier           go to state 44
    primitive_constants  go to state 45
    array_index          go to state 92


state 72

    5 function: data_type IDENTIFIER '(' argument_list ')' . scope_stmt

    '{'  shift, and go to state 93

    scope_stmt  go to state 94


state 73

    8 arguments: arguments ',' . argument

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5

    argument   go to state 95
    data_type  go to state 61


state 74

   10 argument: data_type identifier .

    $default  reduce using rule 10 (argument)


state 75

   71 arithmetic_expression: '(' arithmetic_expression ')' .

    $default  reduce using rule 71 (arithmetic_expression)


state 76

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   67                      | arithmetic_expression '-' arithmetic_expression .
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 67 (arithmetic_expression)


state 77

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   66                      | arithmetic_expression '+' arithmetic_expression .
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 66 (arithmetic_expression)


state 78

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   68                      | arithmetic_expression '*' arithmetic_expression .
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression

    $default  reduce using rule 68 (arithmetic_expression)


state 79

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   69                      | arithmetic_expression '/' arithmetic_expression .
   70                      | arithmetic_expression . '%' arithmetic_expression

    $default  reduce using rule 69 (arithmetic_expression)


state 80

   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression
   70                      | arithmetic_expression '%' arithmetic_expression .

    $default  reduce using rule 70 (arithmetic_expression)


state 81

   65 parameter: STRING .

    $default  reduce using rule 65 (parameter)


state 82

   52 sub_expression: '!' . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 96
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 83

   61 function_invoke: identifier '(' ')' .

    $default  reduce using rule 61 (function_invoke)


state 84

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression
   64 parameter: sub_expression .

    LOGIC_AND  shift, and go to state 97
    LOGIC_OR   shift, and go to state 98
    EQ         shift, and go to state 99
    NE         shift, and go to state 100
    GE         shift, and go to state 101
    LE         shift, and go to state 102
    '<'        shift, and go to state 103
    '>'        shift, and go to state 104

    $default  reduce using rule 64 (parameter)


state 85

   54 sub_expression: assign_expression .

    $default  reduce using rule 54 (sub_expression)


state 86

   60 function_invoke: identifier '(' parameter_list . ')'
   62 parameter_list: parameter_list . ',' parameter

    ','  shift, and go to state 105
    ')'  shift, and go to state 106


state 87

   63 parameter_list: parameter .

    $default  reduce using rule 63 (parameter_list)


state 88

   53 sub_expression: arithmetic_expression .
   66 arithmetic_expression: arithmetic_expression . '+' arithmetic_expression
   67                      | arithmetic_expression . '-' arithmetic_expression
   68                      | arithmetic_expression . '*' arithmetic_expression
   69                      | arithmetic_expression . '/' arithmetic_expression
   70                      | arithmetic_expression . '%' arithmetic_expression

    '-'  shift, and go to state 65
    '+'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 53 (sub_expression)


state 89

   55 sub_expression: unary_expression .

    $default  reduce using rule 55 (sub_expression)


state 90

   73 arithmetic_expression: identifier .
   91 lhs: identifier .
   93 array_indexing: identifier . '[' array_index ']'
   94               | identifier . '[' array_index ']' '[' array_index ']'

    '['  shift, and go to state 30

    ADD_EQ    reduce using rule 91 (lhs)
    SUB_EQ    reduce using rule 91 (lhs)
    MULT_EQ   reduce using rule 91 (lhs)
    DIV_EQ    reduce using rule 91 (lhs)
    '='       reduce using rule 91 (lhs)
    $default  reduce using rule 73 (arithmetic_expression)


state 91

   92 lhs: array_indexing .

    $default  reduce using rule 92 (lhs)


state 92

   94 array_indexing: identifier '[' array_index ']' '[' array_index . ']'

    ']'  shift, and go to state 107


state 93

   11 scope_stmt: '{' . stmts '}'

    $default  reduce using rule 13 (stmts)

    stmts  go to state 108


state 94

    5 function: data_type IDENTIFIER '(' argument_list ')' scope_stmt .

    $default  reduce using rule 5 (function)


state 95

    8 arguments: arguments ',' argument .

    $default  reduce using rule 8 (arguments)


state 96

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression
   52               | '!' sub_expression .

    $default  reduce using rule 52 (sub_expression)


state 97

   50 sub_expression: sub_expression LOGIC_AND . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 109
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 98

   51 sub_expression: sub_expression LOGIC_OR . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 110
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 99

   46 sub_expression: sub_expression EQ . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 111
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 100

   47 sub_expression: sub_expression NE . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 112
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 101

   49 sub_expression: sub_expression GE . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 113
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 102

   48 sub_expression: sub_expression LE . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 114
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 103

   45 sub_expression: sub_expression '<' . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 115
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 104

   44 sub_expression: sub_expression '>' . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 116
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 105

   62 parameter_list: parameter_list ',' . parameter

    STRING      shift, and go to state 81
    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 84
    assign_expression      go to state 85
    parameter              go to state 117
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 106

   60 function_invoke: identifier '(' parameter_list ')' .

    $default  reduce using rule 60 (function_invoke)


state 107

   94 array_indexing: identifier '[' array_index ']' '[' array_index ']' .

    $default  reduce using rule 94 (array_indexing)


state 108

   11 scope_stmt: '{' stmts . '}'
   12 stmts: stmts . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    IF           shift, and go to state 118
    FOR          shift, and go to state 119
    WHILE        shift, and go to state 120
    BREAK        shift, and go to state 121
    CONTINUE     shift, and go to state 122
    RETURN       shift, and go to state 123
    PRINT        shift, and go to state 124
    SCAN         shift, and go to state 125
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    '{'          shift, and go to state 93
    '}'          shift, and go to state 126

    scope_stmt         go to state 127
    stmt               go to state 128
    atomic_stmt        go to state 129
    declaration        go to state 130
    declaration_list   go to state 13
    sub_declaration    go to state 14
    if_block           go to state 131
    for_block          go to state 132
    while_block        go to state 133
    assign_expression  go to state 15
    function_invoke    go to state 134
    unary_expression   go to state 16
    identifier         go to state 135
    data_type          go to state 136
    scan               go to state 137
    print              go to state 138
    lhs                go to state 19
    array_indexing     go to state 20


state 109

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   50               | sub_expression LOGIC_AND sub_expression .
   51               | sub_expression . LOGIC_OR sub_expression

    EQ   shift, and go to state 99
    NE   shift, and go to state 100
    GE   shift, and go to state 101
    LE   shift, and go to state 102
    '<'  shift, and go to state 103
    '>'  shift, and go to state 104

    $default  reduce using rule 50 (sub_expression)


state 110

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression
   51               | sub_expression LOGIC_OR sub_expression .

    LOGIC_AND  shift, and go to state 97
    EQ         shift, and go to state 99
    NE         shift, and go to state 100
    GE         shift, and go to state 101
    LE         shift, and go to state 102
    '<'        shift, and go to state 103
    '>'        shift, and go to state 104

    $default  reduce using rule 51 (sub_expression)


state 111

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   46               | sub_expression EQ sub_expression .
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    GE   shift, and go to state 101
    LE   shift, and go to state 102
    '<'  shift, and go to state 103
    '>'  shift, and go to state 104

    $default  reduce using rule 46 (sub_expression)


state 112

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   47               | sub_expression NE sub_expression .
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    GE   shift, and go to state 101
    LE   shift, and go to state 102
    '<'  shift, and go to state 103
    '>'  shift, and go to state 104

    $default  reduce using rule 47 (sub_expression)


state 113

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   49               | sub_expression GE sub_expression .
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 49 (sub_expression)


state 114

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   48               | sub_expression LE sub_expression .
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 48 (sub_expression)


state 115

   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   45               | sub_expression '<' sub_expression .
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 45 (sub_expression)


state 116

   44 sub_expression: sub_expression . '>' sub_expression
   44               | sub_expression '>' sub_expression .
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    $default  reduce using rule 44 (sub_expression)


state 117

   62 parameter_list: parameter_list ',' parameter .

    $default  reduce using rule 62 (parameter_list)


state 118

   35 if_block: IF . '(' expression ')' stmt
   36         | IF . '(' expression ')' stmt ELSE stmt

    '('  shift, and go to state 139


state 119

   37 for_block: FOR . '(' expression_statement expression_statement ')' stmt
   38          | FOR . '(' expression_statement expression_statement expression_statement ')' stmt

    '('  shift, and go to state 140


state 120

   39 while_block: WHILE . '(' expression ')' stmt

    '('  shift, and go to state 141


state 121

   25 atomic_stmt: BREAK . ';'

    ';'  shift, and go to state 142


state 122

   24 atomic_stmt: CONTINUE . ';'

    ';'  shift, and go to state 143


state 123

   23 atomic_stmt: RETURN . ';'
   26            | RETURN . sub_expression ';'

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50
    ';'         shift, and go to state 144

    sub_expression         go to state 145
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 124

   89 print: PRINT . '(' STRING ')' ';'
   90      | PRINT . '(' STRING ',' IDENTIFIER ')' ';'

    '('  shift, and go to state 146


state 125

   88 scan: SCAN . '(' STRING ',' '&' IDENTIFIER ')' ';'

    '('  shift, and go to state 147


state 126

   11 scope_stmt: '{' stmts '}' .

    $default  reduce using rule 11 (scope_stmt)


state 127

   14 stmt: scope_stmt .

    $default  reduce using rule 14 (stmt)


state 128

   12 stmts: stmts stmt .

    $default  reduce using rule 12 (stmts)


state 129

   15 stmt: atomic_stmt .

    $default  reduce using rule 15 (stmt)


state 130

   19 atomic_stmt: declaration .

    $default  reduce using rule 19 (atomic_stmt)


state 131

   16 atomic_stmt: if_block .

    $default  reduce using rule 16 (atomic_stmt)


state 132

   18 atomic_stmt: for_block .

    $default  reduce using rule 18 (atomic_stmt)


state 133

   17 atomic_stmt: while_block .

    $default  reduce using rule 17 (atomic_stmt)


state 134

   22 atomic_stmt: function_invoke . ';'

    ';'  shift, and go to state 148


state 135

   33 sub_declaration: identifier .
   60 function_invoke: identifier . '(' parameter_list ')'
   61                | identifier . '(' ')'
   91 lhs: identifier .
   93 array_indexing: identifier . '[' array_index ']'
   94               | identifier . '[' array_index ']' '[' array_index ']'

    '('  shift, and go to state 70
    '['  shift, and go to state 30

    ','       reduce using rule 33 (sub_declaration)
    ';'       reduce using rule 33 (sub_declaration)
    $default  reduce using rule 91 (lhs)


state 136

   27 declaration: data_type . declaration_list ';'

    IDENTIFIER  shift, and go to state 39

    declaration_list   go to state 32
    sub_declaration    go to state 14
    assign_expression  go to state 15
    identifier         go to state 17
    lhs                go to state 19
    array_indexing     go to state 20


state 137

   21 atomic_stmt: scan .

    $default  reduce using rule 21 (atomic_stmt)


state 138

   20 atomic_stmt: print .

    $default  reduce using rule 20 (atomic_stmt)


state 139

   35 if_block: IF '(' . expression ')' stmt
   36         | IF '(' . expression ')' stmt ELSE stmt

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    expression             go to state 149
    sub_expression         go to state 150
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 140

   37 for_block: FOR '(' . expression_statement expression_statement ')' stmt
   38          | FOR '(' . expression_statement expression_statement expression_statement ')' stmt

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50
    ';'         shift, and go to state 151

    expression_statement   go to state 152
    expression             go to state 153
    sub_expression         go to state 150
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 141

   39 while_block: WHILE '(' . expression ')' stmt

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    expression             go to state 154
    sub_expression         go to state 150
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 142

   25 atomic_stmt: BREAK ';' .

    $default  reduce using rule 25 (atomic_stmt)


state 143

   24 atomic_stmt: CONTINUE ';' .

    $default  reduce using rule 24 (atomic_stmt)


state 144

   23 atomic_stmt: RETURN ';' .

    $default  reduce using rule 23 (atomic_stmt)


state 145

   26 atomic_stmt: RETURN sub_expression . ';'
   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    LOGIC_AND  shift, and go to state 97
    LOGIC_OR   shift, and go to state 98
    EQ         shift, and go to state 99
    NE         shift, and go to state 100
    GE         shift, and go to state 101
    LE         shift, and go to state 102
    '<'        shift, and go to state 103
    '>'        shift, and go to state 104
    ';'        shift, and go to state 155


state 146

   89 print: PRINT '(' . STRING ')' ';'
   90      | PRINT '(' . STRING ',' IDENTIFIER ')' ';'

    STRING  shift, and go to state 156


state 147

   88 scan: SCAN '(' . STRING ',' '&' IDENTIFIER ')' ';'

    STRING  shift, and go to state 157


state 148

   22 atomic_stmt: function_invoke ';' .

    $default  reduce using rule 22 (atomic_stmt)


state 149

   35 if_block: IF '(' expression . ')' stmt
   36         | IF '(' expression . ')' stmt ELSE stmt
   42 expression: expression . ',' sub_expression

    ','  shift, and go to state 158
    ')'  shift, and go to state 159


state 150

   43 expression: sub_expression .
   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    LOGIC_AND  shift, and go to state 97
    LOGIC_OR   shift, and go to state 98
    EQ         shift, and go to state 99
    NE         shift, and go to state 100
    GE         shift, and go to state 101
    LE         shift, and go to state 102
    '<'        shift, and go to state 103
    '>'        shift, and go to state 104

    $default  reduce using rule 43 (expression)


state 151

   41 expression_statement: ';' .

    $default  reduce using rule 41 (expression_statement)


state 152

   37 for_block: FOR '(' expression_statement . expression_statement ')' stmt
   38          | FOR '(' expression_statement . expression_statement expression_statement ')' stmt

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50
    ';'         shift, and go to state 151

    expression_statement   go to state 160
    expression             go to state 153
    sub_expression         go to state 150
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 153

   40 expression_statement: expression . ';'
   42 expression: expression . ',' sub_expression

    ','  shift, and go to state 158
    ';'  shift, and go to state 161


state 154

   39 while_block: WHILE '(' expression . ')' stmt
   42 expression: expression . ',' sub_expression

    ','  shift, and go to state 158
    ')'  shift, and go to state 162


state 155

   26 atomic_stmt: RETURN sub_expression ';' .

    $default  reduce using rule 26 (atomic_stmt)


state 156

   89 print: PRINT '(' STRING . ')' ';'
   90      | PRINT '(' STRING . ',' IDENTIFIER ')' ';'

    ','  shift, and go to state 163
    ')'  shift, and go to state 164


state 157

   88 scan: SCAN '(' STRING . ',' '&' IDENTIFIER ')' ';'

    ','  shift, and go to state 165


state 158

   42 expression: expression ',' . sub_expression

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50

    sub_expression         go to state 166
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 159

   35 if_block: IF '(' expression ')' . stmt
   36         | IF '(' expression ')' . stmt ELSE stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    IF           shift, and go to state 118
    FOR          shift, and go to state 119
    WHILE        shift, and go to state 120
    BREAK        shift, and go to state 121
    CONTINUE     shift, and go to state 122
    RETURN       shift, and go to state 123
    PRINT        shift, and go to state 124
    SCAN         shift, and go to state 125
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    '{'          shift, and go to state 93

    scope_stmt         go to state 127
    stmt               go to state 167
    atomic_stmt        go to state 129
    declaration        go to state 130
    declaration_list   go to state 13
    sub_declaration    go to state 14
    if_block           go to state 131
    for_block          go to state 132
    while_block        go to state 133
    assign_expression  go to state 15
    function_invoke    go to state 134
    unary_expression   go to state 16
    identifier         go to state 135
    data_type          go to state 136
    scan               go to state 137
    print              go to state 138
    lhs                go to state 19
    array_indexing     go to state 20


state 160

   37 for_block: FOR '(' expression_statement expression_statement . ')' stmt
   38          | FOR '(' expression_statement expression_statement . expression_statement ')' stmt

    INC         shift, and go to state 6
    DEC         shift, and go to state 7
    INTEGER     shift, and go to state 41
    DOUBLE      shift, and go to state 42
    CHAR        shift, and go to state 43
    IDENTIFIER  shift, and go to state 8
    '-'         shift, and go to state 49
    '!'         shift, and go to state 82
    '('         shift, and go to state 50
    ')'         shift, and go to state 168
    ';'         shift, and go to state 151

    expression_statement   go to state 169
    expression             go to state 153
    sub_expression         go to state 150
    assign_expression      go to state 85
    arithmetic_expression  go to state 88
    unary_expression       go to state 89
    identifier             go to state 90
    primitive_constants    go to state 55
    lhs                    go to state 19
    array_indexing         go to state 91


state 161

   40 expression_statement: expression ';' .

    $default  reduce using rule 40 (expression_statement)


state 162

   39 while_block: WHILE '(' expression ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    IF           shift, and go to state 118
    FOR          shift, and go to state 119
    WHILE        shift, and go to state 120
    BREAK        shift, and go to state 121
    CONTINUE     shift, and go to state 122
    RETURN       shift, and go to state 123
    PRINT        shift, and go to state 124
    SCAN         shift, and go to state 125
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    '{'          shift, and go to state 93

    scope_stmt         go to state 127
    stmt               go to state 170
    atomic_stmt        go to state 129
    declaration        go to state 130
    declaration_list   go to state 13
    sub_declaration    go to state 14
    if_block           go to state 131
    for_block          go to state 132
    while_block        go to state 133
    assign_expression  go to state 15
    function_invoke    go to state 134
    unary_expression   go to state 16
    identifier         go to state 135
    data_type          go to state 136
    scan               go to state 137
    print              go to state 138
    lhs                go to state 19
    array_indexing     go to state 20


state 163

   90 print: PRINT '(' STRING ',' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 171


state 164

   89 print: PRINT '(' STRING ')' . ';'

    ';'  shift, and go to state 172


state 165

   88 scan: SCAN '(' STRING ',' . '&' IDENTIFIER ')' ';'

    '&'  shift, and go to state 173


state 166

   42 expression: expression ',' sub_expression .
   44 sub_expression: sub_expression . '>' sub_expression
   45               | sub_expression . '<' sub_expression
   46               | sub_expression . EQ sub_expression
   47               | sub_expression . NE sub_expression
   48               | sub_expression . LE sub_expression
   49               | sub_expression . GE sub_expression
   50               | sub_expression . LOGIC_AND sub_expression
   51               | sub_expression . LOGIC_OR sub_expression

    LOGIC_AND  shift, and go to state 97
    LOGIC_OR   shift, and go to state 98
    EQ         shift, and go to state 99
    NE         shift, and go to state 100
    GE         shift, and go to state 101
    LE         shift, and go to state 102
    '<'        shift, and go to state 103
    '>'        shift, and go to state 104

    $default  reduce using rule 42 (expression)


state 167

   35 if_block: IF '(' expression ')' stmt .
   36         | IF '(' expression ')' stmt . ELSE stmt

    $default  reduce using rule 35 (if_block)


state 168

   37 for_block: FOR '(' expression_statement expression_statement ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    IF           shift, and go to state 118
    FOR          shift, and go to state 119
    WHILE        shift, and go to state 120
    BREAK        shift, and go to state 121
    CONTINUE     shift, and go to state 122
    RETURN       shift, and go to state 123
    PRINT        shift, and go to state 124
    SCAN         shift, and go to state 125
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    '{'          shift, and go to state 93

    scope_stmt         go to state 127
    stmt               go to state 174
    atomic_stmt        go to state 129
    declaration        go to state 130
    declaration_list   go to state 13
    sub_declaration    go to state 14
    if_block           go to state 131
    for_block          go to state 132
    while_block        go to state 133
    assign_expression  go to state 15
    function_invoke    go to state 134
    unary_expression   go to state 16
    identifier         go to state 135
    data_type          go to state 136
    scan               go to state 137
    print              go to state 138
    lhs                go to state 19
    array_indexing     go to state 20


state 169

   38 for_block: FOR '(' expression_statement expression_statement expression_statement . ')' stmt

    ')'  shift, and go to state 175


state 170

   39 while_block: WHILE '(' expression ')' stmt .

    $default  reduce using rule 39 (while_block)


state 171

   90 print: PRINT '(' STRING ',' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 176


state 172

   89 print: PRINT '(' STRING ')' ';' .

    $default  reduce using rule 89 (print)


state 173

   88 scan: SCAN '(' STRING ',' '&' . IDENTIFIER ')' ';'

    IDENTIFIER  shift, and go to state 177


state 174

   37 for_block: FOR '(' expression_statement expression_statement ')' stmt .

    $default  reduce using rule 37 (for_block)


state 175

   38 for_block: FOR '(' expression_statement expression_statement expression_statement ')' . stmt

    INT_TYPE     shift, and go to state 1
    DOUBLE_TYPE  shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    BOOL_TYPE    shift, and go to state 4
    VOID         shift, and go to state 5
    IF           shift, and go to state 118
    FOR          shift, and go to state 119
    WHILE        shift, and go to state 120
    BREAK        shift, and go to state 121
    CONTINUE     shift, and go to state 122
    RETURN       shift, and go to state 123
    PRINT        shift, and go to state 124
    SCAN         shift, and go to state 125
    INC          shift, and go to state 6
    DEC          shift, and go to state 7
    IDENTIFIER   shift, and go to state 8
    '{'          shift, and go to state 93

    scope_stmt         go to state 127
    stmt               go to state 178
    atomic_stmt        go to state 129
    declaration        go to state 130
    declaration_list   go to state 13
    sub_declaration    go to state 14
    if_block           go to state 131
    for_block          go to state 132
    while_block        go to state 133
    assign_expression  go to state 15
    function_invoke    go to state 134
    unary_expression   go to state 16
    identifier         go to state 135
    data_type          go to state 136
    scan               go to state 137
    print              go to state 138
    lhs                go to state 19
    array_indexing     go to state 20


state 176

   90 print: PRINT '(' STRING ',' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 179


state 177

   88 scan: SCAN '(' STRING ',' '&' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 180


state 178

   38 for_block: FOR '(' expression_statement expression_statement expression_statement ')' stmt .

    $default  reduce using rule 38 (for_block)


state 179

   90 print: PRINT '(' STRING ',' IDENTIFIER ')' ';' .

    $default  reduce using rule 90 (print)


state 180

   88 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 181


state 181

   88 scan: SCAN '(' STRING ',' '&' IDENTIFIER ')' ';' .

    $default  reduce using rule 88 (scan)
